// <auto-generated />
using System;
using Coyote.Console.App.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coyote.Console.App.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(CoyoteAppDBContext))]
    [Migration("20220326131938_AddTable_Member_Account")]
    partial class AddTable_Member_Account
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Coyote.Console.App.Models.APN", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SoldDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasName("IX_APNNumber_Unique");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("APN");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "Test",
                            IsDeleted = false,
                            Number = 1L,
                            ProductId = 1L,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AccessDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RolesId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("AccessDepartment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DepartmentId = 1,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AccountLoyalty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.Property<string>("Comp")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CycleEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CycleStart")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastTransactionDate")
                        .HasColumnType("datetime");

                    b.Property<float?>("LoyalityPoints")
                        .HasColumnType("real");

                    b.Property<int?>("RedeemCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RedeemDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RedeemExp")
                        .HasColumnType("datetime");

                    b.Property<string>("RedeemInfo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("RewardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RewardInfo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("RewardType")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("TriggCompliance")
                        .HasColumnType("real")
                        .HasMaxLength(5000);

                    b.Property<int?>("TriggerType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("AccountLoyalty");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AccountTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<float>("Amt")
                        .HasColumnType("real");

                    b.Property<float?>("CartonQty")
                        .HasColumnType("real");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CommodityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommodityId")
                        .HasColumnType("int");

                    b.Property<string>("Comp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<float>("Debtor")
                        .HasColumnType("real");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<float>("ExGSTAmt")
                        .HasColumnType("real");

                    b.Property<float>("ExGSTCost")
                        .HasColumnType("real");

                    b.Property<string>("Flags")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("GLAccount")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("GLPostedInd")
                        .HasColumnType("bit");

                    b.Property<int?>("Group")
                        .HasColumnType("int");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManualInd")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<long?>("Member")
                        .HasColumnType("bigint");

                    b.Property<float?>("NewOnHand")
                        .HasColumnType("real");

                    b.Property<string>("OutletCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutletId")
                        .HasColumnType("int");

                    b.Property<float?>("Parent")
                        .HasColumnType("real");

                    b.Property<float?>("Points")
                        .HasColumnType("real");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PromoBuyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PromoBuyId")
                        .HasColumnType("int");

                    b.Property<float>("PromoSales")
                        .HasColumnType("real");

                    b.Property<float>("PromoSalesGST")
                        .HasColumnType("real");

                    b.Property<string>("PromoSellCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PromoSellId")
                        .HasColumnType("int");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RedeemDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RedeemInfo")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ReferenceType")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("RewardInfo")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<float?>("StockMovement")
                        .HasColumnType("real");

                    b.Property<int?>("SubRange")
                        .HasColumnType("int");

                    b.Property<string>("SubRangeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Tender")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TillCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TillId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TriggCompliance")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float?>("UnitQty")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Weekend")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CommodityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OutletId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromoBuyId");

                    b.HasIndex("PromoSellId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TillId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("UserId");

                    b.ToTable("AccountTransaction");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Accounts", b =>
                {
                    b.Property<int>("ACC_NUMBER")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACC_ACCOUNT_CLASS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ACCOUNT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_CITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_STATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_STREET_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADDR_UNIT_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ADD_ID_9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ACC_ADD_ID_TYPE_1")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_10")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_11")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_12")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_2")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_3")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_4")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_5")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_6")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_7")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_8")
                        .HasColumnType("int");

                    b.Property<int?>("ACC_ADD_ID_TYPE_9")
                        .HasColumnType("int");

                    b.Property<string>("ACC_CARD_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_CONTACT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_DATE_ADDED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_DATE_CHANGE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ACC_DATE_JOINED")
                        .HasColumnType("datetime2");

                    b.Property<string>("ACC_DATE_OF_BIRTH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ACC_DELETED")
                        .HasColumnType("tinyint");

                    b.Property<string>("ACC_DEL_ADDR_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_DEL_ADDR_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_DEL_ADDR_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_DEL_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_DEL_POST_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_EMPLOYEE_IND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_FAX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ACC_FINANCIAL_UNTIL")
                        .HasColumnType("datetime2");

                    b.Property<string>("ACC_FIRST_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_FLAGS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ACC_GENDER")
                        .HasColumnType("int");

                    b.Property<string>("ACC_Last_Modified_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ACC_MASTER_ACC")
                        .HasColumnType("int");

                    b.Property<string>("ACC_MOBILE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_NOTES_LINE_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_NOTES_LINE_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_NOTES_LINE_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_NOTES_LINE_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_NOTES_LINE_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_NOTES_LINE_6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_OCCUPATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_OUTLET")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ACC_OWL_CLUB_USER")
                        .HasColumnType("tinyint");

                    b.Property<string>("ACC_PASSWORD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_POST_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_PRICE_LEVEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_SEND_PROMO_INFO_IND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_STATEMENT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ACC_STATUS")
                        .HasColumnType("int");

                    b.Property<string>("ACC_SURNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_SUSPEND_REASON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ACC_SUSPEND_UNTIL")
                        .HasColumnType("datetime2");

                    b.Property<string>("ACC_TILL_IND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACC_ZONE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ACC_NUMBER");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AutoOrderSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CoverDays")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("HistoryDays")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentBuyDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("AutoOrderSettings");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.BulkOrderFromTablet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastImport")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OrderBatch")
                        .HasColumnType("datetime");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<long>("ProductNumber")
                        .HasColumnType("bigint");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("BulkOrderFromTablet");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.BulkPrintLabelFromTabletTbl", b =>
                {
                    b.Property<DateTime?>("BPLT_Last_Import")
                        .HasColumnType("datetime");

                    b.Property<int>("BPLT_Outlet")
                        .HasColumnType("int");

                    b.Property<DateTime>("BPLT_Print_Batch")
                        .HasColumnType("datetime");

                    b.Property<float>("BPLT_Product_Number")
                        .HasColumnType("real");

                    b.ToTable("BulkPrintLabelFromTabletTbl");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CSCPeriod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("Heading")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("CSCPERIOD");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Cashier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Addr1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Addr2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Addr3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Dispname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FuelPass")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FuelUser")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeftHandTillInd")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<int?>("OutletId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("WristBandInd")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentsId");

                    b.HasIndex("OutletId");

                    b.HasIndex("StoreGroupId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ZoneId");

                    b.ToTable("Cashier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Email = "cashier@coyote.com",
                            FirstName = "cashier1",
                            IsDeleted = false,
                            Number = 1L,
                            OutletId = 1,
                            Password = "123456654",
                            Status = true,
                            StoreGroupId = 1,
                            Surname = "cash sur",
                            TypeId = 41,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Commodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("CoverDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<double?>("GPPcntLevel1")
                        .HasColumnType("float");

                    b.Property<double?>("GPPcntLevel2")
                        .HasColumnType("float");

                    b.Property<double?>("GPPcntLevel3")
                        .HasColumnType("float");

                    b.Property<double?>("GPPcntLevel4")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Commodity_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Commodity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Comodity1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DepartmentId = 1,
                            Desc = "Comodity Description",
                            IsDeleted = false,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CompetitionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("ActivationPoints")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("ComplDiscount")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("ForcePrint")
                        .HasColumnType("bit");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("LoyaltyFactor")
                        .HasColumnType("real");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("PosReceiptPrint")
                        .HasColumnType("bit");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<bool>("ResetCycle")
                        .HasColumnType("bit");

                    b.Property<int>("ResetCycleId")
                        .HasColumnType("int");

                    b.Property<int?>("RewardExpiration")
                        .HasColumnType("int");

                    b.Property<float?>("RewardThreshold")
                        .HasColumnType("real");

                    b.Property<int>("RewardTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TriggerTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PromotionId")
                        .IsUnique();

                    b.HasIndex("ResetCycleId");

                    b.HasIndex("RewardTypeId");

                    b.HasIndex("TriggerTypeId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ZoneId");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_CompetitionDetail_Code_IsDeleted_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("CompetitionDetail");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CompetitionReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompPromoId")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompPromoId")
                        .IsUnique();

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("CompetitionReward");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CompetitionTrigger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompPromoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("LoyaltyFactor")
                        .HasColumnType("real");

                    b.Property<bool>("Share")
                        .HasColumnType("bit");

                    b.Property<int>("TriggerProductGroupID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompPromoId")
                        .IsUnique();

                    b.HasIndex("CreatedById");

                    b.HasIndex("TriggerProductGroupID");

                    b.HasIndex("UpdatedById");

                    b.ToTable("CompetitionTrigger");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CostPriceZones", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<float?>("Factor1")
                        .HasColumnType("real");

                    b.Property<float?>("Factor2")
                        .HasColumnType("real");

                    b.Property<float?>("Factor3")
                        .HasColumnType("real");

                    b.Property<int?>("HostSettingID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("SuspUpdOutlet")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("HostSettingID");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("CostPriceZones");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AdvertisingDisc")
                        .HasColumnType("float");

                    b.Property<bool?>("AllowSaleDisc")
                        .HasColumnType("bit");

                    b.Property<double?>("BudgetGroethFactor")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool?>("ExcludeWastageOptimalOrdering")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MapTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("RoyaltyDisc")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("MapTypeId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Department_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Department1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "Department Description",
                            IsDeleted = false,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.EPay", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CostExGST")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomField")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("DataVersion")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("DivValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUPANTrack")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUPANTrackFieldNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUPANTrackPosition")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUPANTrackSize")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUTrack1IIN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUTrack1IINFieldNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUTrack1IINPosition")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ETUTrack2IIN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GST")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float>("IMPORTSEQ")
                        .HasColumnType("real");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Margin")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MaxValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MenuTemplateItemTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MinValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PINPAN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductCategoryCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductCategoryTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ProductGroupCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductGroupTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductTypeCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("ProductTypeTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiptLogo1")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ReceiptLogo2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ReceiptPINTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiptSerialTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiptText")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiptTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiptTopupReferenceTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReceiptTopupTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SupplierAccCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SupplierAccTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("TIMESTAMP")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VariableValue")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductID");

                    b.ToTable("EPAY");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("IX_EmailTemplate_Name")
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("UpdatedById");

                    b.ToTable("EmailTemplate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = @"Dear %UserFirstName% %UserLastName% <br /> <br />

                             Username: %Username% <br />
			                 You will be required to change your password.  Coyote Application system. <br />
			                 Please click the following URL to change your password: %TemporaryPasswordURL%  <br />
			                 Please do not reply to this email as this message will be undeliverable <br /> <br />
			 

                              Coyote Application Team",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DisplayName = "Forgot Password",
                            IsDeleted = false,
                            Name = "Forgot Password",
                            Status = false,
                            Subject = "Forgot Password",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = @"Dear %UserFirstName% %UserLastName% <br /> <br />

                         Username: %Username%  <br />
			             You will be required to change your password the first time you log into the Coyote Application system.<br />
			             Coyote Application system. <br />
			             Please click the following URL to change your password: %TemporaryPasswordURL% <br />
			             Please do not reply to this email as this message will be undeliverable <br />
			             <br />

                          Coyote Application Team",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DisplayName = "New User Creation",
                            IsDeleted = false,
                            Name = "New User Creation",
                            Status = false,
                            Subject = "New User Creation",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.GLAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("AccountSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("Company")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("GLAccount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "123",
                            AccountSystem = "Xero",
                            Company = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "GLAccount",
                            IsDeleted = false,
                            StoreId = 1,
                            SupplierId = 1,
                            TypeId = 41,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.HostProcessing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Posted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("HOSTUPD");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.HostSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyPromoPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("FilePathID")
                        .HasColumnType("int");

                    b.Property<int>("HostFormatID")
                        .HasColumnType("int");

                    b.Property<string>("InitialLoadFileWeekly")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<float>("NumberFactor")
                        .HasColumnType("real");

                    b.Property<string>("SellPromoPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseID")
                        .HasColumnType("int");

                    b.Property<string>("WeeklyFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("FilePathID");

                    b.HasIndex("HostFormatID");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("SupplierID");

                    b.HasIndex("WareHouseID");

                    b.ToTable("HostSettings");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.HostUpdChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<float>("CtnCostAfter")
                        .HasColumnType("real");

                    b.Property<float>("CtnCostBefore")
                        .HasColumnType("real");

                    b.Property<float>("CtnCostSuggested")
                        .HasColumnType("real");

                    b.Property<float>("CtnQtyAfter")
                        .HasColumnType("real");

                    b.Property<float>("CtnQtyBefore")
                        .HasColumnType("real");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<int>("HostUpdId")
                        .HasColumnType("int");

                    b.Property<long>("HostUpdTimeStamp")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OutletId")
                        .HasColumnType("int");

                    b.Property<float>("Price1Before")
                        .HasColumnType("real");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangeTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HostId");

                    b.HasIndex("HostUpdId");

                    b.HasIndex("OutletId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("HostUpdChange");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.JournalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("APNNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("APNSold")
                        .HasColumnType("bigint");

                    b.Property<int?>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<int?>("AccountsACC_NUMBER")
                        .HasColumnType("int");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("CashierId")
                        .HasColumnType("int");

                    b.Property<long?>("CashierNumber")
                        .HasColumnType("bigint");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float>("DiscountAmount")
                        .HasColumnType("real");

                    b.Property<float>("GSTAmount")
                        .HasColumnType("real");

                    b.Property<float>("GSTCost")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JournalDetailDate")
                        .HasColumnType("int");

                    b.Property<int?>("JournalDetailTime")
                        .HasColumnType("int");

                    b.Property<long>("JournalHeaderId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoyaltyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutletCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("PostStatus")
                        .HasColumnType("bit");

                    b.Property<int>("PriceLevel")
                        .HasColumnType("int");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PromoCompCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoCompId")
                        .HasColumnType("int");

                    b.Property<string>("PromoMemberOfferCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoMemeberOfferId")
                        .HasColumnType("int");

                    b.Property<string>("PromoMixCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoMixMatchId")
                        .HasColumnType("int");

                    b.Property<string>("PromoOfferCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoOfferId")
                        .HasColumnType("int");

                    b.Property<float?>("PromoPurchaseRebate")
                        .HasColumnType("real");

                    b.Property<string>("PromoPurchaseRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<float?>("PromoScanRebate")
                        .HasColumnType("real");

                    b.Property<string>("PromoScanRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("PromoSellCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoSellId")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real")
                        .HasMaxLength(50);

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ReferenceType")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<float?>("TermsRebate")
                        .HasColumnType("real");

                    b.Property<string>("TermsRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("TillCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("TransactionNo")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("APNSold");

                    b.HasIndex("AccountsACC_NUMBER");

                    b.HasIndex("CashierId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("JournalHeaderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromoCompId");

                    b.HasIndex("PromoMemeberOfferId");

                    b.HasIndex("PromoMixMatchId");

                    b.HasIndex("PromoOfferId");

                    b.HasIndex("PromoSellId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("JournalDetail");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.JournalHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CashierId")
                        .HasColumnType("int");

                    b.Property<long?>("CashierNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HeaderDate")
                        .HasColumnType("int");

                    b.Property<int>("HeaderTime")
                        .HasColumnType("int");

                    b.Property<int>("Hour")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OutletCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<bool>("PostStatus")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProcessStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TillCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TradingDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("TransactionAmount")
                        .HasColumnType("real");

                    b.Property<float>("TransactionGST")
                        .HasColumnType("real");

                    b.Property<int>("TransactionNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletId");

                    b.HasIndex("TillId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("HeaderDate", "HeaderTime", "OutletId", "TillId", "TransactionNo")
                        .IsUnique()
                        .HasName("IX_JournalHeader_HeaderDate_HeaderTime_Outlet_Till_TransactionNo_Unique");

                    b.ToTable("JournalHeader");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Keypad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyPadButtonJSONData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Keypad_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Keypad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "792_Keypad",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "792 Keypad",
                            IsDeleted = false,
                            OutletId = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.KeypadButton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributesDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BtnKeypadLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("ButtonIndex")
                        .HasColumnType("int");

                    b.Property<int>("CashierLevel")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KeypadId")
                        .HasColumnType("int");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("PriceLevel")
                        .HasColumnType("int");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float?>("SalesDiscountPerc")
                        .HasColumnType("real");

                    b.Property<string>("ShortDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BtnKeypadLevelId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("KeypadId");

                    b.HasIndex("LevelId");

                    b.HasIndex("ProductId");

                    b.HasIndex("Type");

                    b.HasIndex("UpdatedById");

                    b.ToTable("KeypadButton");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.KeypadLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KeypadId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("KeypadId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("KeypadLevel");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ManualSale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ManualSale");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ManualSaleItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ManualSaleId")
                        .HasColumnType("bigint");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("PriceLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ManualSaleId");

                    b.HasIndex("OutletId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ManualSaleItem");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.MasterList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_MasterList_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("MasterList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessId = 1,
                            Code = "ZONE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ZONE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 2,
                            AccessId = 1,
                            Code = "CATEGORY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "CATEGORY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 3,
                            AccessId = 1,
                            Code = "MANUFACTURER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MANUFACTURER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 4,
                            AccessId = 1,
                            Code = "GROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "GROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 5,
                            AccessId = 1,
                            Code = "NATIONALRANGE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "NATIONAL RANGE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 6,
                            AccessId = 1,
                            Code = "UNITOFMEASURE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "UNIT OF MEASURE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 7,
                            AccessId = 1,
                            Code = "WAREHOUSEHOSTFORMAT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "WAREHOUSE HOST FORMAT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 8,
                            AccessId = 1,
                            Code = "CONTROLLER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MODULE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 9,
                            AccessId = 1,
                            Code = "ACTION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PERMISSION",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 10,
                            AccessId = 1,
                            Code = "PROMOTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PROMO TYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 11,
                            AccessId = 1,
                            Code = "ACCESSDEPT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ACCESSDEPT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 12,
                            AccessId = 1,
                            Code = "ACCESSGROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ACCESSGROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 13,
                            AccessId = 1,
                            Code = "ACCESSMENU",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ACCESSMENU",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 14,
                            AccessId = 1,
                            Code = "ADJUSTCODE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ADJUSTCODE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 15,
                            AccessId = 1,
                            Code = "ADJUSTMENT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ADJUSTMENT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 16,
                            AccessId = 1,
                            Code = "ADJUSTMENTI",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ADJUSTMENTI",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 17,
                            AccessId = 1,
                            Code = "CASHIERTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "CASHIERTYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 18,
                            AccessId = 1,
                            Code = "COMMODITY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "COMMODITY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 19,
                            AccessId = 1,
                            Code = "COSTZONE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "COSTZONE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 20,
                            AccessId = 1,
                            Code = "CRUSERFLAGS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "CRUSERFLAGS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 21,
                            AccessId = 1,
                            Code = "DEBTORTERM",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "DEBTORTERM",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 22,
                            AccessId = 1,
                            Code = "DEBTORTERMS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "DEBTORTERMS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 23,
                            AccessId = 1,
                            Code = "DEPARTMENT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "DEPARTMENT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 24,
                            AccessId = 1,
                            Code = "ENTITY_EDIT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ENTITY_EDIT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 25,
                            AccessId = 1,
                            Code = "HOST",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "HOST",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 26,
                            AccessId = 1,
                            Code = "HOSTUPD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "HOSTUPD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 27,
                            AccessId = 1,
                            Code = "HOSTUPD_CHG",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "HOSTUPD_CHG",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 28,
                            AccessId = 1,
                            Code = "JNL_POSTING_ON",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "JNL_POSTING_ON",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 29,
                            AccessId = 1,
                            Code = "KEYPAD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "KEYPAD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 30,
                            AccessId = 1,
                            Code = "KEYPAD_BTNS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "KEYPAD_BTNS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 31,
                            AccessId = 1,
                            Code = "KEYPAD_LEVS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "KEYPAD_LEVS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 32,
                            AccessId = 1,
                            Code = "LABELTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "LABELTYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 33,
                            AccessId = 1,
                            Code = "MANUALSALE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MANUALSALE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 34,
                            AccessId = 1,
                            Code = "MANUALSALEI",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MANUALSALEI",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 35,
                            AccessId = 1,
                            Code = "MEMBERCLASS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MEMBERCLASS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 36,
                            AccessId = 1,
                            Code = "MEMBEROFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MEMBEROFFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 37,
                            AccessId = 1,
                            Code = "MIXMATCH",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MIXMATCH",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 38,
                            AccessId = 1,
                            Code = "MM_OLD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "MM_OLD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 39,
                            AccessId = 1,
                            Code = "OCCUPATION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "OCCUPATION",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 40,
                            AccessId = 1,
                            Code = "OFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "OFFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 41,
                            AccessId = 1,
                            Code = "OUTLET_BUDGETS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "OUTLET_BUDGETS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 42,
                            AccessId = 1,
                            Code = "OUTLET_FIFO",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "OUTLET_FIFO",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 43,
                            AccessId = 1,
                            Code = "OUTLET_SUPPLIER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "OUTLET_SUPPLIER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 44,
                            AccessId = 1,
                            Code = "PATH",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PATH",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 45,
                            AccessId = 1,
                            Code = "PDELOAD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PDELOAD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 46,
                            AccessId = 1,
                            Code = "PRICEZONE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PRICEZONE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 47,
                            AccessId = 1,
                            Code = "PROMOTION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PROMOTION",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 48,
                            AccessId = 1,
                            Code = "ROYALTY_SCALES",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ROYALTY_SCALES",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 49,
                            AccessId = 1,
                            Code = "SAV_AUTO_ORDER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "SAV_AUTO_ORDER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 50,
                            AccessId = 1,
                            Code = "STOCKTAKE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "STOCKTAKE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 51,
                            AccessId = 1,
                            Code = "STOCKTAKEI",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "STOCKTAKEI",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 52,
                            AccessId = 1,
                            Code = "STOREGROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "STOREGROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 53,
                            AccessId = 1,
                            Code = "SUBRANGE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "SUBRANGE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 54,
                            AccessId = 1,
                            Code = "SUPPLIER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "SUPPLIER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 55,
                            AccessId = 1,
                            Code = "SYNCTILL",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "SYNCTILL",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 56,
                            AccessId = 1,
                            Code = "SYSCONTROLS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "SYSCONTROLS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 57,
                            AccessId = 1,
                            Code = "TAXCODE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "TAXCODE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 58,
                            AccessId = 1,
                            Code = "USERLOG",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "USERLOG",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 59,
                            AccessId = 1,
                            Code = "USERTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "USERTYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 60,
                            AccessId = 1,
                            Code = "WAREHOUSE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "WAREHOUSE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 61,
                            AccessId = 1,
                            Code = "XERO_ACCOUNT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "XERO_ACCOUNT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 62,
                            AccessId = 1,
                            Code = "ZONEOUTLET",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "ZONEOUTLET",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 63,
                            AccessId = 1,
                            Code = "TYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "TYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 64,
                            AccessId = 1,
                            Code = "PromotionFrequency",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "PromotionFrequency",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 65,
                            AccessId = 1,
                            Code = "DEPT_MAPTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Department Map Type",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 66,
                            AccessId = 1,
                            Code = "OrderType",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Order Type",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 67,
                            AccessId = 1,
                            Code = "OrderStatus",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Order Status",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 68,
                            AccessId = 1,
                            Code = "OrderCreationType",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Order Creation Type",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.MasterListItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Col1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Col2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Col3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Col4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Col5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double?>("Num1")
                        .HasColumnType("float");

                    b.Property<double?>("Num2")
                        .HasColumnType("float");

                    b.Property<double?>("Num3")
                        .HasColumnType("float");

                    b.Property<double?>("Num4")
                        .HasColumnType("float");

                    b.Property<double?>("Num5")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ListId", "Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_List_Id_Item_Deleted_Code")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("MasterListItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessId = 1,
                            Code = "ZONE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 1,
                            Name = "ZONE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 2,
                            AccessId = 1,
                            Code = "CATEGORY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 2,
                            Name = "CATEGORY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 3,
                            AccessId = 1,
                            Code = "MANUFACTURER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 3,
                            Name = "MANUFACTURER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 4,
                            AccessId = 1,
                            Code = "GROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 4,
                            Name = "GROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 5,
                            AccessId = 1,
                            Code = "NATIONALRANGE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 5,
                            Name = "NATIONAL RANGE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 6,
                            AccessId = 1,
                            Code = "UNITOFMEASURE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 6,
                            Name = "UNIT OF MEASURE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 7,
                            AccessId = 1,
                            Code = "WAREHOUSEHOSTFORMAT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 7,
                            Name = "WAREHOUSE HOST FORMAT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 8,
                            AccessId = 1,
                            Code = "APN",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "APN",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 9,
                            AccessId = 1,
                            Code = "COMMODITY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "COMMODITY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 10,
                            AccessId = 1,
                            Code = "DEPARTMENT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "DEPARTMENT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 11,
                            AccessId = 1,
                            Code = "LOGIN",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "LOGIN",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 12,
                            AccessId = 1,
                            Code = "MASTERLIST",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "MASTERLIST",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 13,
                            AccessId = 1,
                            Code = "MASTERLISTITEM",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "MASTERLISTITEM",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 14,
                            AccessId = 1,
                            Code = "PRODUCT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "PRODUCT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 15,
                            AccessId = 1,
                            Code = "ROLE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "ROLE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 16,
                            AccessId = 1,
                            Code = "STORE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "STORE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 17,
                            AccessId = 1,
                            Code = "STOREGROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "STOREGROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 18,
                            AccessId = 1,
                            Code = "SUPPLIER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "SUPPLIER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 19,
                            AccessId = 1,
                            Code = "SUPPLIERPRODUCT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "SUPPLIERPRODUCT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 20,
                            AccessId = 1,
                            Code = "TAX",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "TAX",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 21,
                            AccessId = 1,
                            Code = "USER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "USER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 22,
                            AccessId = 1,
                            Code = "USERROLE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "USERROLE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 23,
                            AccessId = 1,
                            Code = "WAREHOUSE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "WAREHOUSE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 24,
                            AccessId = 1,
                            Code = "ZONEOUTL",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 8,
                            Name = "ZONEOUTLET",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 25,
                            AccessId = 1,
                            Code = "GET",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 9,
                            Name = "GET",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 26,
                            AccessId = 1,
                            Code = "ADD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 9,
                            Name = "POST",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 27,
                            AccessId = 1,
                            Code = "UPDATE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 9,
                            Name = "PUT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 28,
                            AccessId = 1,
                            Code = "DELETE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 9,
                            Name = "DELETE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 29,
                            AccessId = 1,
                            Code = "OFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 10,
                            Name = "OFFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 30,
                            AccessId = 1,
                            Code = "BUYING",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 10,
                            Name = "BUYING",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 31,
                            AccessId = 1,
                            Code = "SELLING",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 10,
                            Name = "SELLING",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 32,
                            AccessId = 1,
                            Code = "COMPETITION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 10,
                            Name = "COMPITITION",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 33,
                            AccessId = 1,
                            Code = "MEMBEROFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 10,
                            Name = "MEMBEROFFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 34,
                            AccessId = 1,
                            Code = "MIXMATCH",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 10,
                            Name = "MIXMATCH",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 35,
                            AccessId = 1,
                            Code = "ACCESSDEPT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 11,
                            Name = "ACCESSDEPT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 36,
                            AccessId = 1,
                            Code = "ACCESSGROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 12,
                            Name = "ACCESSGROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 37,
                            AccessId = 1,
                            Code = "ACCESSMENU",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 13,
                            Name = "ACCESSMENU",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 38,
                            AccessId = 1,
                            Code = "ADJUSTCODE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 14,
                            Name = "ADJUSTCODE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 39,
                            AccessId = 1,
                            Code = "ADJUSTMENT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 15,
                            Name = "ADJUSTMENT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 40,
                            AccessId = 1,
                            Code = "ADJUSTMENTI",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 16,
                            Name = "ADJUSTMENTI",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 41,
                            AccessId = 1,
                            Code = "CASHIERTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 17,
                            Name = "CASHIERTYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 42,
                            AccessId = 1,
                            Code = "COMMODITY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 18,
                            Name = "COMMODITY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 43,
                            AccessId = 1,
                            Code = "COSTZONE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 19,
                            Name = "COSTZONE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 44,
                            AccessId = 1,
                            Code = "CRUSERFLAGS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 20,
                            Name = "CRUSERFLAGS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 45,
                            AccessId = 1,
                            Code = "DEBTORTERM",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 21,
                            Name = "DEBTORTERM",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 46,
                            AccessId = 1,
                            Code = "DEBTORTERMS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 22,
                            Name = "DEBTORTERMS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 47,
                            AccessId = 1,
                            Code = "DEPARTMENT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 23,
                            Name = "DEPARTMENT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 48,
                            AccessId = 1,
                            Code = "ENTITY_EDIT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 24,
                            Name = "ENTITY_EDIT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 49,
                            AccessId = 1,
                            Code = "HOST",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 25,
                            Name = "HOST",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 50,
                            AccessId = 1,
                            Code = "HOSTUPD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 26,
                            Name = "HOSTUPD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 51,
                            AccessId = 1,
                            Code = "HOSTUPD_CHG",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 27,
                            Name = "HOSTUPD_CHG",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 52,
                            AccessId = 1,
                            Code = "JNL_POSTING_ON",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 28,
                            Name = "JNL_POSTING_ON",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 53,
                            AccessId = 1,
                            Code = "KEYPAD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 29,
                            Name = "KEYPAD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 54,
                            AccessId = 1,
                            Code = "KEYPAD_BTNS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 30,
                            Name = "KEYPAD_BTNS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 55,
                            AccessId = 1,
                            Code = "KEYPAD_LEVS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 31,
                            Name = "KEYPAD_LEVS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 56,
                            AccessId = 1,
                            Code = "LABELTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 32,
                            Name = "LABELTYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 57,
                            AccessId = 1,
                            Code = "MANUALSALE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 33,
                            Name = "MANUALSALE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 58,
                            AccessId = 1,
                            Code = "MANUALSALEI",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 34,
                            Name = "MANUALSALEI",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 59,
                            AccessId = 1,
                            Code = "MEMBERCLASS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 35,
                            Name = "MEMBERCLASS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 60,
                            AccessId = 1,
                            Code = "MEMBEROFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 36,
                            Name = "MEMBEROFFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 61,
                            AccessId = 1,
                            Code = "MIXMATCH",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 37,
                            Name = "MIXMATCH",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 62,
                            AccessId = 1,
                            Code = "MM_OLD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 38,
                            Name = "MM_OLD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 63,
                            AccessId = 1,
                            Code = "OCCUPATION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 39,
                            Name = "OCCUPATION",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 64,
                            AccessId = 1,
                            Code = "OFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 40,
                            Name = "OFFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 65,
                            AccessId = 1,
                            Code = "OUTLET_BUDGETS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 41,
                            Name = "OUTLET_BUDGETS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 66,
                            AccessId = 1,
                            Code = "OUTLET_FIFO",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 42,
                            Name = "OUTLET_FIFO",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 67,
                            AccessId = 1,
                            Code = "OUTLET_SUPPLIER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 43,
                            Name = "OUTLET_SUPPLIER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 68,
                            AccessId = 1,
                            Code = "PATH",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 44,
                            Name = "PATH",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 69,
                            AccessId = 1,
                            Code = "PDELOAD",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 45,
                            Name = "PDELOAD",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 70,
                            AccessId = 1,
                            Code = "PRICEZONE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 46,
                            Name = "PRICEZONE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 71,
                            AccessId = 1,
                            Code = "PROMOTION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 47,
                            Name = "PROMOTION",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 72,
                            AccessId = 1,
                            Code = "ROYALTY_SCALES",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 48,
                            Name = "ROYALTY_SCALES",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 73,
                            AccessId = 1,
                            Code = "SAV_AUTO_ORDER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 49,
                            Name = "SAV_AUTO_ORDER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 74,
                            AccessId = 1,
                            Code = "STOCKTAKE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 50,
                            Name = "STOCKTAKE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 75,
                            AccessId = 1,
                            Code = "STOCKTAKEI",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 51,
                            Name = "STOCKTAKEI",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 76,
                            AccessId = 1,
                            Code = "STOREGROUP",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 52,
                            Name = "STOREGROUP",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 77,
                            AccessId = 1,
                            Code = "SUBRANGE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 53,
                            Name = "SUBRANGE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 78,
                            AccessId = 1,
                            Code = "SUPPLIER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 54,
                            Name = "SUPPLIER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 79,
                            AccessId = 1,
                            Code = "SYNCTILL",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 55,
                            Name = "SYNCTILL",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 80,
                            AccessId = 1,
                            Code = "SYSCONTROLS",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 56,
                            Name = "SYSCONTROLS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 81,
                            AccessId = 1,
                            Code = "TAXCODE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 57,
                            Name = "TAXCODE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 82,
                            AccessId = 1,
                            Code = "USERLOG",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 58,
                            Name = "USERLOG",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 83,
                            AccessId = 1,
                            Code = "USERTYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 59,
                            Name = "USERTYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 84,
                            AccessId = 1,
                            Code = "WAREHOUSE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 60,
                            Name = "WAREHOUSE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 85,
                            AccessId = 1,
                            Code = "XERO_ACCOUNT",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 61,
                            Name = "XERO_ACCOUNT",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 86,
                            AccessId = 1,
                            Code = "ZONEOUTLET",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 62,
                            Name = "ZONEOUTLET",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 87,
                            AccessId = 1,
                            Code = "TYPE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 63,
                            Name = "TYPE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 88,
                            AccessId = 1,
                            Code = "HOURLY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 64,
                            Name = "ACTIVE MINUTES",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 89,
                            AccessId = 1,
                            Code = "DAILY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 64,
                            Name = "ACTIVE HOURS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 90,
                            AccessId = 1,
                            Code = "WEEKLY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 64,
                            Name = "ACTIVE WEEK DAYS",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 91,
                            AccessId = 1,
                            Code = "MONTHLY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 64,
                            Name = "ACTIVE DATE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 92,
                            AccessId = 1,
                            Code = "MAP_TYPE-1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 65,
                            Name = "MAP_TYPE-1",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 93,
                            AccessId = 1,
                            Code = "MAP-TYPE-2",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 65,
                            Name = "MAP-TYPE-2",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 94,
                            AccessId = 1,
                            Code = "ORDER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 66,
                            Name = "ORDER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 95,
                            AccessId = 1,
                            Code = "DELIVERY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 66,
                            Name = "DELIVERY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 96,
                            AccessId = 1,
                            Code = "INVOICE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 66,
                            Name = "INVOICE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 97,
                            AccessId = 1,
                            Code = "TRANSFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 66,
                            Name = "TRANSFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 98,
                            AccessId = 1,
                            Code = "NEW",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 67,
                            Name = "NEW",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 99,
                            AccessId = 1,
                            Code = "ORDER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 67,
                            Name = "ORDER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 100,
                            AccessId = 1,
                            Code = "DELIVERY",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 67,
                            Name = "DELIVERY",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 101,
                            AccessId = 1,
                            Code = "INVOICE",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 67,
                            Name = "INVOICE",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 102,
                            AccessId = 1,
                            Code = "TRANSFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 67,
                            Name = "TRANSFER",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 103,
                            AccessId = 1,
                            Code = "1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 68,
                            Name = "1",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 104,
                            AccessId = 1,
                            Code = "2",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 68,
                            Name = "2",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 105,
                            AccessId = 1,
                            Code = "3",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 68,
                            Name = "3",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 106,
                            AccessId = 1,
                            Code = "4",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 68,
                            Name = "4",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 107,
                            AccessId = 1,
                            Code = "5",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 68,
                            Name = "5",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 108,
                            AccessId = 1,
                            Code = "6",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ListId = 68,
                            Name = "6",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Members", b =>
                {
                    b.Property<int>("MEMB_NUMBER")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MEMB_ACCUM_POINTS_IND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MEMB_Exclude_From_Competitions")
                        .HasColumnType("bit");

                    b.Property<string>("MEMB_FLAGS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MEMB_LOYALTY_TYPE")
                        .HasColumnType("real");

                    b.Property<DateTime?>("MEMB_Last_Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MEMB_OUTLET")
                        .HasColumnType("int");

                    b.Property<float?>("MEMB_POINTS_BALANCE")
                        .HasColumnType("real");

                    b.Property<int?>("Memb_Home_Store")
                        .HasColumnType("int");

                    b.HasKey("MEMB_NUMBER");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ModuleActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ModuleActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Get",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ModuleId = 8,
                            Name = "Get",
                            Status = false,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 2,
                            Action = "Post",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ModuleId = 8,
                            Name = "Post",
                            Status = false,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 3,
                            Action = "Put",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ModuleId = 8,
                            Name = "Put",
                            Status = false,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 4,
                            Action = "Delete",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ModuleId = 8,
                            Name = "Delete",
                            Status = false,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OrderAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("NewStatusId")
                        .HasColumnType("int");

                    b.Property<long>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("OutletId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NewStatusId");

                    b.HasIndex("OutletId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("OrderAudit");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BonusInd")
                        .HasColumnType("bit");

                    b.Property<string>("BuyPromoCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("BuyPromoDisc")
                        .HasColumnType("real");

                    b.Property<DateTime?>("BuyPromoEndDate")
                        .HasColumnType("datetime");

                    b.Property<float?>("CartonCost")
                        .HasColumnType("real");

                    b.Property<float>("CartonQty")
                        .HasColumnType("real");

                    b.Property<float>("Cartons")
                        .HasColumnType("real");

                    b.Property<string>("CheaperSupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CheaperSupplierId")
                        .HasColumnType("int")
                        .HasMaxLength(15);

                    b.Property<bool?>("CheckSuuplier")
                        .HasColumnType("bit");

                    b.Property<int?>("CoverDaysUsed")
                        .HasColumnType("int");

                    b.Property<float?>("CoverUnits")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<float?>("DeliverCartons")
                        .HasColumnType("real");

                    b.Property<float?>("DeliverTotalUnits")
                        .HasColumnType("real");

                    b.Property<float?>("DeliverUnits")
                        .HasColumnType("real");

                    b.Property<float?>("FinalCartonCost")
                        .HasColumnType("real");

                    b.Property<float?>("FinalLineTotal")
                        .HasColumnType("real");

                    b.Property<bool?>("InvestBuy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<float>("LineTotal")
                        .HasColumnType("real");

                    b.Property<int?>("MinReorderQty")
                        .HasColumnType("int");

                    b.Property<bool>("NewProduct")
                        .HasColumnType("bit");

                    b.Property<float?>("NonPromoAvgDaily")
                        .HasColumnType("real");

                    b.Property<bool?>("NonPromoBuy")
                        .HasColumnType("bit");

                    b.Property<float?>("NonPromoMinOnHand")
                        .HasColumnType("real");

                    b.Property<float?>("NonPromoSales56Days")
                        .HasColumnType("real");

                    b.Property<int?>("NormalCoverDays")
                        .HasColumnType("int");

                    b.Property<float?>("OnHand")
                        .HasColumnType("real");

                    b.Property<float?>("OnOrder")
                        .HasColumnType("real");

                    b.Property<DateTime?>("OrderCreatedAt")
                        .HasColumnType("datetime");

                    b.Property<long>("OrderHeaderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("Perishable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductNumber")
                        .HasColumnType("bigint");

                    b.Property<float?>("PromoAvgDaily")
                        .HasColumnType("real");

                    b.Property<bool?>("PromoBuy")
                        .HasColumnType("bit");

                    b.Property<float?>("PromoMinOnHand")
                        .HasColumnType("real");

                    b.Property<float?>("PromoSales56Days")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalePromoCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("SalePromoEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SupplierItem")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<long?>("SupplierProductId")
                        .HasColumnType("bigint");

                    b.Property<float>("TotalUnits")
                        .HasColumnType("real");

                    b.Property<int?>("TradingCoverDays")
                        .HasColumnType("int");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float>("Units")
                        .HasColumnType("real");

                    b.Property<float?>("UnitsSold")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheaperSupplierId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierProductId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("OrderHeaderId", "LineNo", "CreatedAt")
                        .IsUnique()
                        .HasName("IX_OrderDetail_OrderHeaderId_LineNo_Time_Unique");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OrderHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoverDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreationTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CreationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("GstAmt")
                        .HasColumnType("real");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("InvoiceTotal")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Posted")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("StoreIdAsSupplier")
                        .HasColumnType("int");

                    b.Property<float?>("SubTotalAdmin")
                        .HasColumnType("real");

                    b.Property<float?>("SubTotalDisc")
                        .HasColumnType("real");

                    b.Property<float?>("SubTotalFreight")
                        .HasColumnType("real");

                    b.Property<float?>("SubTotalSubsidy")
                        .HasColumnType("real");

                    b.Property<float?>("SubTotalTax")
                        .HasColumnType("real");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CreationTypeId");

                    b.HasIndex("OutletId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StoreIdAsSupplier");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("OrderHeader");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletBudget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Budget")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<float?>("EmployHours")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("MDROver")
                        .HasColumnType("real");

                    b.Property<float?>("Markdown")
                        .HasColumnType("real");

                    b.Property<float?>("Refunds")
                        .HasColumnType("real");

                    b.Property<float?>("StockAdjust")
                        .HasColumnType("real");

                    b.Property<float?>("StockOnHand")
                        .HasColumnType("real");

                    b.Property<float?>("StockPurchase")
                        .HasColumnType("real");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<float?>("Voids")
                        .HasColumnType("real");

                    b.Property<float?>("Wastage")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("OutletBudget");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllMember")
                        .HasColumnType("bit");

                    b.Property<float>("CartonCost")
                        .HasColumnType("real");

                    b.Property<float?>("CartonCostAvg")
                        .HasColumnType("real");

                    b.Property<float?>("CartonCostHost")
                        .HasColumnType("real");

                    b.Property<float?>("CartonCostInv")
                        .HasColumnType("real");

                    b.Property<bool?>("ChangeLabelInd")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ChangeLabelPrinted")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ChangeTillInd")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool?>("FifoStock")
                        .HasColumnType("bit");

                    b.Property<string>("GenCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoldNorm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("LabelQty")
                        .HasColumnType("real");

                    b.Property<float?>("MaxOnHand")
                        .HasColumnType("real");

                    b.Property<float>("MinOnHand")
                        .HasColumnType("real");

                    b.Property<float?>("MinReorderQty")
                        .HasColumnType("real");

                    b.Property<float?>("Mrp")
                        .HasColumnType("real");

                    b.Property<float>("NormalPrice1")
                        .HasColumnType("real");

                    b.Property<float?>("NormalPrice2")
                        .HasColumnType("real");

                    b.Property<float?>("NormalPrice3")
                        .HasColumnType("real");

                    b.Property<float?>("NormalPrice4")
                        .HasColumnType("real");

                    b.Property<float?>("NormalPrice5")
                        .HasColumnType("real");

                    b.Property<bool?>("OpenPrice")
                        .HasColumnType("bit");

                    b.Property<int?>("PickingBinNo")
                        .HasColumnType("int");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PromoBuy")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoBuyId")
                        .HasColumnType("int");

                    b.Property<float?>("PromoCartonCost")
                        .HasColumnType("real");

                    b.Property<bool?>("PromoComp")
                        .HasColumnType("bit");

                    b.Property<long?>("PromoCompId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PromoMemOff")
                        .HasColumnType("bit");

                    b.Property<float?>("PromoMemOffPrice1")
                        .HasColumnType("real");

                    b.Property<float?>("PromoMemOffPrice2")
                        .HasColumnType("real");

                    b.Property<float?>("PromoMemOffPrice3")
                        .HasColumnType("real");

                    b.Property<float?>("PromoMemOffPrice4")
                        .HasColumnType("real");

                    b.Property<float?>("PromoMemOffPrice5")
                        .HasColumnType("real");

                    b.Property<int?>("PromoMemeberOfferId")
                        .HasColumnType("int");

                    b.Property<bool?>("PromoMix1")
                        .HasColumnType("bit");

                    b.Property<bool?>("PromoMix2")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoMixMatch1Id")
                        .HasColumnType("int");

                    b.Property<int?>("PromoMixMatch2Id")
                        .HasColumnType("int");

                    b.Property<bool?>("PromoOffer1")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoOffer1Id")
                        .HasColumnType("int");

                    b.Property<bool?>("PromoOffer2")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoOffer2Id")
                        .HasColumnType("int");

                    b.Property<bool?>("PromoOffer3")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoOffer3Id")
                        .HasColumnType("int");

                    b.Property<bool?>("PromoOffer4")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoOffer4Id")
                        .HasColumnType("int");

                    b.Property<float?>("PromoPrice1")
                        .HasColumnType("real");

                    b.Property<float?>("PromoPrice2")
                        .HasColumnType("real");

                    b.Property<float?>("PromoPrice3")
                        .HasColumnType("real");

                    b.Property<float?>("PromoPrice4")
                        .HasColumnType("real");

                    b.Property<float?>("PromoPrice5")
                        .HasColumnType("real");

                    b.Property<bool?>("PromoSell")
                        .HasColumnType("bit");

                    b.Property<int?>("PromoSellId")
                        .HasColumnType("int");

                    b.Property<float>("QtyOnHand")
                        .HasColumnType("real");

                    b.Property<float?>("ScalePlu")
                        .HasColumnType("real");

                    b.Property<bool?>("ShortLabelInd")
                        .HasColumnType("bit");

                    b.Property<bool>("SkipReorder")
                        .HasColumnType("bit");

                    b.Property<float?>("SpecCartonCost")
                        .HasColumnType("real");

                    b.Property<string>("SpecCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SpecFrom")
                        .HasColumnType("datetime");

                    b.Property<float?>("SpecPrice")
                        .HasColumnType("real");

                    b.Property<DateTime?>("SpecTo")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<bool?>("Till")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PromoBuyId");

                    b.HasIndex("PromoCompId");

                    b.HasIndex("PromoMemeberOfferId");

                    b.HasIndex("PromoMixMatch1Id");

                    b.HasIndex("PromoMixMatch2Id");

                    b.HasIndex("PromoOffer1Id");

                    b.HasIndex("PromoOffer2Id");

                    b.HasIndex("PromoOffer3Id");

                    b.HasIndex("PromoOffer4Id");

                    b.HasIndex("PromoSellId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ProductId", "StoreId")
                        .IsUnique()
                        .HasName("IX_ProductStore_Unique");

                    b.ToTable("OutletProduct");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CartonCost = 0f,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            MinOnHand = 0f,
                            NormalPrice1 = 1f,
                            PickingBinNo = 0,
                            ProductId = 1L,
                            QtyOnHand = 0f,
                            SkipReorder = false,
                            Status = true,
                            StoreId = 1,
                            SupplierId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletRoyaltyScales", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IncGST")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<float>("Percent")
                        .HasColumnType("real");

                    b.Property<float>("ScalesFrom")
                        .HasColumnType("real");

                    b.Property<float>("ScalesTo")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("OutletRoyaltyScales");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletSupplierSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BuyCartoon")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtyDefault")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DivisionId");

                    b.HasIndex("StateId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("OutletSupplierSetting");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyCartoon = true,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            CustomerNumber = "123654",
                            Desc = "First OutletSupplierSetting",
                            DivisionId = 1,
                            IsDeleted = false,
                            Password = "testPassword",
                            PhoneNumber = "1234567890",
                            QtyDefault = "1",
                            StateId = 1,
                            Status = true,
                            StoreId = 1,
                            SupplierId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            UserId = "5462Qt61"
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletTradingHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("FriCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FriOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MonCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MonOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("OuteltId")
                        .HasColumnType("int");

                    b.Property<string>("SatCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SatOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SunCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SunOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ThuCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ThuOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TueCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TueOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("WedCloseTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("WedOpenTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OuteltId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("OutletTradingHours");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.POSMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayParts")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DisplayType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("POSMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ReferenceOverrideType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ReferenceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ZoneId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DateFrom = new DateTime(2022, 3, 16, 13, 19, 32, 475, DateTimeKind.Utc).AddTicks(2943),
                            DateTo = new DateTime(2022, 3, 31, 13, 19, 32, 475, DateTimeKind.Utc).AddTicks(3611),
                            DayParts = "YYYYYYYYYYYYYYYYYYYYYYY",
                            Desc = "Prod/Promo Desc",
                            DisplayType = "1",
                            IsDeleted = false,
                            POSMessage = "Message for POS",
                            Priority = 1,
                            ReferenceId = "Prod_1",
                            ReferenceType = "Product",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Paths", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OutletID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PathType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OutletID");

                    b.ToTable("Paths");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PrintLabelFromTabletTbl", b =>
                {
                    b.Property<int>("PLT_Outlet")
                        .HasColumnType("int");

                    b.Property<DateTime>("PLT_Print_Batch")
                        .HasColumnType("datetime");

                    b.Property<float>("PLT_Product_Number")
                        .HasColumnType("real");

                    b.ToTable("PrintLabelFromTabletTbl");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PrintLabelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LablesPerPage")
                        .HasColumnType("int");

                    b.Property<string>("PrintBarCodeType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_PrintLabelType_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("PrintLabelType");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessOutletIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AltSupplier")
                        .HasColumnType("bit");

                    b.Property<bool?>("AustMadeInd")
                        .HasColumnType("bit");

                    b.Property<bool?>("AustOwnedInd")
                        .HasColumnType("bit");

                    b.Property<float>("CartonCost")
                        .HasColumnType("real");

                    b.Property<int>("CartonQty")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CommodityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeactivatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Freight")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("GenericInd")
                        .HasColumnType("bit");

                    b.Property<bool?>("GmFlagInd")
                        .HasColumnType("bit");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool?>("HeartSmartInd")
                        .HasColumnType("bit");

                    b.Property<string>("HostItemType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("HostItemType2")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("HostItemType3")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("HostItemType4")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("HostItemType5")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("HostNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("HostNumber2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("HostNumber3")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("HostNumber4")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("LabelQty")
                        .HasColumnType("real");

                    b.Property<long?>("LastApnSold")
                        .HasColumnType("bigint");

                    b.Property<float?>("Litres")
                        .HasColumnType("real");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("NationalRangeId")
                        .HasColumnType("int");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<bool?>("OrganicInd")
                        .HasColumnType("bit");

                    b.Property<long?>("Parent")
                        .HasColumnType("bigint");

                    b.Property<string>("PosDesc")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Replicate")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("Rrp")
                        .HasColumnType("real");

                    b.Property<bool?>("ScaleInd")
                        .HasColumnType("bit");

                    b.Property<bool?>("SeasonalInd")
                        .HasColumnType("bit");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<bool?>("SlowMovingInd")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool?>("StoreFrozenInd")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<float?>("TareWeight")
                        .HasColumnType("real");

                    b.Property<long>("TaxId")
                        .HasColumnType("bigint");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMeasureId")
                        .HasColumnType("int");

                    b.Property<float>("UnitQty")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<bool?>("VarietyInd")
                        .HasColumnType("bit");

                    b.Property<bool?>("WarehouseFrozenInd")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CommodityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("NationalRangeId");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasName("IX_ProductNumber_Unique");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TaxId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UnitMeasureId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessOutletIds = "1",
                            CartonCost = 12f,
                            CartonQty = 12,
                            CategoryId = 2,
                            CommodityId = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DepartmentId = 1,
                            Desc = "First prod1",
                            GroupId = 4,
                            IsDeleted = false,
                            ManufacturerId = 3,
                            NationalRangeId = 5,
                            Number = 1L,
                            Status = true,
                            SupplierId = 1,
                            TaxId = 1L,
                            TypeId = 63,
                            UnitMeasureId = 6,
                            UnitQty = 0f,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availibility")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PromotionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RptGroup")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FrequencyId");

                    b.HasIndex("PromotionTypeId");

                    b.HasIndex("SourceId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ZoneId");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Promotion_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Promotion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availibility = "YYYYYYY",
                            Code = "Mixmatch1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "Mix 1",
                            End = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyId = 90,
                            IsDeleted = false,
                            PromotionTypeId = 34,
                            SourceId = 34,
                            Start = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 2,
                            Availibility = "YYYYYYY",
                            Code = "Offer",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "off 1",
                            End = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyId = 90,
                            IsDeleted = false,
                            PromotionTypeId = 29,
                            SourceId = 29,
                            Start = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 3,
                            Availibility = "YYYYYYY",
                            Code = "BUYING",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "BUYING 1",
                            End = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyId = 90,
                            IsDeleted = false,
                            PromotionTypeId = 30,
                            SourceId = 30,
                            Start = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 4,
                            Availibility = "YYYYYYY",
                            Code = "SELLING",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "SELLING 1",
                            End = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyId = 90,
                            IsDeleted = false,
                            PromotionTypeId = 31,
                            SourceId = 31,
                            Start = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 5,
                            Availibility = "YYYYYYY",
                            Code = "COMPITITION",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "COMPITITION 1",
                            End = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyId = 90,
                            IsDeleted = false,
                            PromotionTypeId = 32,
                            SourceId = 32,
                            Start = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        },
                        new
                        {
                            Id = 6,
                            Availibility = "YYYYYYY",
                            Code = "MEMBEROFFER",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "MEMBEROFFER 1",
                            End = new DateTime(2020, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyId = 90,
                            IsDeleted = false,
                            PromotionTypeId = 33,
                            SourceId = 33,
                            Start = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionBuying", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<float?>("AmtOffNorm1")
                        .HasColumnType("real");

                    b.Property<float>("CartonCost")
                        .HasColumnType("real");

                    b.Property<int>("CartonQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CostEnd")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("CostIsPromInd")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CostStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("HostPromoType")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float?>("PromoUnits")
                        .HasColumnType("real");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoBuying");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartonCost = 12f,
                            CartonQty = 12,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ProductId = 1L,
                            PromotionId = 3,
                            Status = true,
                            SupplierId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionCompetition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompetitionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromotionCompetition");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionMemberOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<float?>("AmtOffNorm1")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("HostPromoType")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float?>("Price1")
                        .HasColumnType("real");

                    b.Property<float?>("Price2")
                        .HasColumnType("real");

                    b.Property<float?>("Price3")
                        .HasColumnType("real");

                    b.Property<float?>("Price4")
                        .HasColumnType("real");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float?>("PromoUnits")
                        .HasColumnType("real");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoMemberOffer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Price = 1f,
                            ProductId = 1L,
                            PromotionId = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionMixmatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Amt1")
                        .HasColumnType("real");

                    b.Property<float?>("Amt2")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("CumulativeOffer")
                        .HasColumnType("bit");

                    b.Property<float?>("DiscPcnt1")
                        .HasColumnType("real");

                    b.Property<float?>("DiscPcnt2")
                        .HasColumnType("real");

                    b.Property<short>("Group")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PriceLevel1")
                        .HasColumnType("int");

                    b.Property<int?>("PriceLevel2")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<float?>("Qty1")
                        .HasColumnType("real");

                    b.Property<float?>("Qty2")
                        .HasColumnType("real");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoMixmatch");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amt1 = 1f,
                            Amt2 = 1f,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            CumulativeOffer = false,
                            DiscPcnt1 = 10f,
                            DiscPcnt2 = 20f,
                            Group = (short)0,
                            IsDeleted = false,
                            PromotionId = 1,
                            Qty1 = 2f,
                            Qty2 = 2f,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionMixmatchProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<float?>("AmtOffNorm1")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("HostPromoType")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float?>("PromoUnits")
                        .HasColumnType("real");

                    b.Property<int>("PromotionMixmatchId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionMixmatchId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoMixmatchProduct");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ProductId = 1L,
                            PromotionMixmatchId = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<short>("Group")
                        .HasColumnType("smallint");

                    b.Property<string>("Group1Price")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<float?>("Group1Qty")
                        .HasColumnType("real");

                    b.Property<string>("Group2Price")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<float?>("Group2Qty")
                        .HasColumnType("real");

                    b.Property<string>("Group3Price")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<float?>("Group3Qty")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<float?>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<float?>("TotalQty")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoOffer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Group = (short)1,
                            Group1Price = "Free",
                            Group1Qty = 1f,
                            Group2Price = "1.0",
                            Group2Qty = 2f,
                            IsDeleted = false,
                            PromotionId = 1,
                            Status = false,
                            TotalPrice = 20f,
                            TotalQty = 3f,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionOfferProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<float?>("AmtOffNorm1")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("HostPromoType")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("OfferGroup")
                        .HasColumnType("tinyint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float?>("PromoUnits")
                        .HasColumnType("real");

                    b.Property<int>("PromotionOfferId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionOfferId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoOfferProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            OfferGroup = (byte)1,
                            ProductId = 1L,
                            PromotionOfferId = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionSelling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<float?>("AmtOffNorm1")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("HostPromoType")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<float?>("Price1")
                        .HasColumnType("real");

                    b.Property<float?>("Price2")
                        .HasColumnType("real");

                    b.Property<float?>("Price3")
                        .HasColumnType("real");

                    b.Property<float?>("Price4")
                        .HasColumnType("real");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float?>("PromoUnits")
                        .HasColumnType("real");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PromoSelling");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Price = 1f,
                            ProductId = 1L,
                            PromotionId = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RebateDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("RebateHeaderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("RebateHeaderId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("RebateDetails");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RebateHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ZoneId");

                    b.ToTable("RebateHeader");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RebateOutlets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RebateHeaderId")
                        .HasColumnType("bigint");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RebateHeaderId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("RebateOutlets");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Recipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IngredientProductID")
                        .HasColumnType("bigint");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("IsParents")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OutletID")
                        .HasColumnType("int");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<DateTime>("RecipeTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IngredientProductID");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OutletID");

                    b.HasIndex("ProductID");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ReportScheduler", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CashierId")
                        .HasColumnType("bigint");

                    b.Property<string>("CategoryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Chart")
                        .HasColumnType("bit");

                    b.Property<string>("CommodityIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Continuous")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("CsvExport")
                        .HasColumnType("bit");

                    b.Property<string>("DayRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DrillDown")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ExcelExport")
                        .HasColumnType("bit");

                    b.Property<string>("FilterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InceptionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InceptionTime")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("Inline")
                        .HasColumnType("bit");

                    b.Property<int>("IntervalBracket")
                        .HasColumnType("int");

                    b.Property<int>("IntervalInd")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool>("IsHostCost")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNormalCost")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPromoSale")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupplierBatchCost")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastRun")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManufacturerIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("NillTransactionInterval")
                        .HasColumnType("int");

                    b.Property<bool>("OrderByAlp")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderByAmt")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderByGP")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderByMargin")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderByQty")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderBySOH")
                        .HasColumnType("bit");

                    b.Property<int>("OutLetId")
                        .HasColumnType("int");

                    b.Property<bool?>("PdfExport")
                        .HasColumnType("bit");

                    b.Property<string>("PeriodicReportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductEndId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductStartId")
                        .HasColumnType("bigint");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<int>("SalesAMT")
                        .HasColumnType("int");

                    b.Property<int?>("SalesSOH")
                        .HasColumnType("int");

                    b.Property<bool>("SplitOverOutlet")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("StoreIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Summary")
                        .HasColumnType("bit");

                    b.Property<string>("SupplierBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TillId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TillIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WithVar")
                        .HasColumnType("bit");

                    b.Property<string>("ZoneIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("salesAMTRange")
                        .HasColumnType("real");

                    b.Property<float?>("salesSOHRange")
                        .HasColumnType("real");

                    b.Property<bool>("stockLowWarn")
                        .HasColumnType("bit");

                    b.Property<string>("stockNationalRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("stockNegativeOH")
                        .HasColumnType("bit");

                    b.Property<int?>("stockNoOfDaysWarn")
                        .HasColumnType("int");

                    b.Property<bool>("stockSOHButNoSales")
                        .HasColumnType("bit");

                    b.Property<bool>("stockSOHLevel")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportScheduler");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ReportSchedulerLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmailTryCount")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportGenerated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReported")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("ReportGenerated")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ReportTryCount")
                        .HasColumnType("int");

                    b.Property<long>("SchedulerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SchedulerId");

                    b.HasIndex("UserId");

                    b.ToTable("ReportSchedulerLog");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PermissionDeptSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Role_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SuperAdmin",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "SuperAdmin",
                            PermissionDeptSet = "",
                            PermissionSet = "*",
                            Status = true,
                            Type = "SuperAdmin",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "Admin",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Admin",
                            PermissionDeptSet = "",
                            PermissionSet = "*",
                            Status = true,
                            Type = "Admin",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "Super",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Super",
                            PermissionDeptSet = "",
                            PermissionSet = "*",
                            Status = true,
                            Type = "Super",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RolesDefaultPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DefaultRolePermissionss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpVerb")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("RolesDefaultPermissions");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SchedulerUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<long>("SchedulerId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("SchedulerId");

                    b.HasIndex("UserId");

                    b.ToTable("SchedulerUser");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SendEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BCC")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CC")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("EmailSubject")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FromAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSendEmail")
                        .HasColumnType("bit");

                    b.Property<string>("MsgBody")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("TemplateContent")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ToAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("SendEmail");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockAdjustDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("ItemCost")
                        .HasColumnType("real");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<float>("LineTotal")
                        .HasColumnType("real");

                    b.Property<long>("OutletProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int");

                    b.Property<long>("StockAdjustHeaderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReasonId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("StockAdjustHeaderId", "ProductId", "LineNo", "CreatedAt")
                        .IsUnique()
                        .HasName("IX_StockAdjustDetail_StockAdjustHeaderId_ProductId_Created_Unique");

                    b.ToTable("StockAdjustDetail");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockAdjustHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostToDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("StockAdjustHeader");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockTakeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("ItemCost")
                        .HasColumnType("real");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<float>("LineCost")
                        .HasColumnType("real");

                    b.Property<float>("LineTotal")
                        .HasColumnType("real");

                    b.Property<int>("OnHandUnits")
                        .HasColumnType("int");

                    b.Property<long>("OutletProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<long>("StockTakeHeaderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<float>("VarQty")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockTakeHeaderId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("StockTakeDetail");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockTakeHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostToDate")
                        .HasColumnType("datetime");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("OutletId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("StockTakeHeader");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abn")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("AddressOnApp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<bool?>("AppOrders")
                        .HasColumnType("bit");

                    b.Property<double?>("BudgetGrowthFact")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool?>("CostInd")
                        .HasColumnType("bit");

                    b.Property<string>("CostType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("CostZoneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DelAddr1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DelAddr2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DelAddr3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DelName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DelPostCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool?>("DisplayOnApp")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("EntityNumber")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool?>("FuelSite")
                        .HasColumnType("bit");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelTypePromoId")
                        .HasColumnType("int");

                    b.Property<int?>("LabelTypeShelfId")
                        .HasColumnType("int");

                    b.Property<int?>("LabelTypeShortId")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("NameOnApp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("OpenHours")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("OutletPriceFromOutletId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<int?>("PriceFromLevel")
                        .HasColumnType("int");

                    b.Property<string>("PriceLevelDesc1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PriceLevelDesc2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PriceLevelDesc3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PriceLevelDesc4")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PriceLevelDesc5")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("PriceZoneId")
                        .HasColumnType("int");

                    b.Property<bool>("SellingInd")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasMaxLength(10);

                    b.Property<bool>("StockInd")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostZoneId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("GroupId");

                    b.HasIndex("LabelTypePromoId");

                    b.HasIndex("LabelTypeShelfId");

                    b.HasIndex("LabelTypeShortId");

                    b.HasIndex("OutletPriceFromOutletId");

                    b.HasIndex("PriceZoneId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_StoreCode_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "999999",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "Super Admin Store",
                            GroupId = 1,
                            IsDeleted = false,
                            SellingInd = false,
                            Status = false,
                            StockInd = false,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StoreGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_StoreGroupCode_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("StoreGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Super Admin Store Group",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            Name = "Super Admin Store Group",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ABN")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CostZone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GSTFreeItemCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("GSTFreeItemDesc")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("GSTInclItemCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("GSTInclItemDesc")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PromoSupplier")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UpdateCost")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("XeroName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Supplier_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Supp1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "Supplier1",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SupplierOrderingSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoverDays")
                        .HasColumnType("int");

                    b.Property<int>("CoverDaysDiscountThreshold1")
                        .HasColumnType("int");

                    b.Property<int>("CoverDaysDiscountThreshold2")
                        .HasColumnType("int");

                    b.Property<int>("CoverDaysDiscountThreshold3")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("DOWGenerateOrder")
                        .HasColumnType("int");

                    b.Property<float>("DiscountThresholdOne")
                        .HasColumnType("real");

                    b.Property<float>("DiscountThresholdThree")
                        .HasColumnType("real");

                    b.Property<float>("DiscountThresholdTwo")
                        .HasColumnType("real");

                    b.Property<int>("InvoiceOrderOffset")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastRun")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MultipleOrdersInAWeek")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderNonDefaultSupplier")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiveOrderOffset")
                        .HasColumnType("int");

                    b.Property<int>("SendOrderOffset")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int?>("UserCreatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserCreatedById");

                    b.ToTable("OutletSupplierSchedule");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverDays = 0,
                            CoverDaysDiscountThreshold1 = 1,
                            CoverDaysDiscountThreshold2 = 2,
                            CoverDaysDiscountThreshold3 = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            DOWGenerateOrder = 1,
                            DiscountThresholdOne = 1f,
                            DiscountThresholdThree = 1f,
                            DiscountThresholdTwo = 1f,
                            InvoiceOrderOffset = 0,
                            IsDeleted = false,
                            MultipleOrdersInAWeek = true,
                            OrderNonDefaultSupplier = false,
                            ReceiveOrderOffset = 0,
                            SendOrderOffset = 0,
                            StoreId = 1,
                            SupplierId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SupplierProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BestBuy")
                        .HasColumnType("bit");

                    b.Property<float>("CartonCost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MinReorderQty")
                        .HasColumnType("int");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierItem")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ProductId", "SupplierId", "SupplierItem")
                        .IsUnique()
                        .HasName("IX_SupplierProduct_ProductId_SupplierId_SupplierItem_Unique")
                        .HasFilter("[SupplierItem] IS NOT NULL");

                    b.ToTable("SupplierProduct");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CartonCost = 10f,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            ProductId = 1L,
                            Status = true,
                            SupplierId = 1,
                            SupplierItem = "Test",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SystemControls", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AllocateGroups")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowALM")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowFIFO")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DatabaseUsage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultItemPricing")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("GrowthFactor")
                        .HasColumnType("real");

                    b.Property<bool>("HostUpdatePricing")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoicePostPricing")
                        .HasColumnType("bit");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("LicenceKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MassPriceUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("MaxStores")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<long>("NumberFactor")
                        .HasColumnType("bigint");

                    b.Property<int>("PriceRounding")
                        .HasColumnType("int");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TillJournal")
                        .HasColumnType("int");

                    b.Property<string>("TransactionRef")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TransferRef")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("WastageRef")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SystemControls");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AllocateGroups = false,
                            AllowALM = false,
                            AllowFIFO = false,
                            Color = "Blue(Default)",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultItemPricing = 0,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GrowthFactor = 0f,
                            HostUpdatePricing = false,
                            InvoicePostPricing = false,
                            IsActive = 1,
                            LicenceKey = "123",
                            MassPriceUpdate = "REAL",
                            MaxStores = 20,
                            ModifiedBy = 1,
                            ModifiedDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Controll",
                            NumberFactor = 1000000L,
                            PriceRounding = 0,
                            SerialNo = "12345",
                            TillJournal = 0
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Tax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Tax_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Tax");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "codTax1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "codTax1",
                            Factor = 1f,
                            IsDeleted = false,
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Till", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KeypadId")
                        .HasColumnType("int");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("KeypadId");

                    b.HasIndex("OutletId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_Till_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Till");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.TillSync", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Account")
                        .HasColumnType("int");

                    b.Property<int?>("Cashier")
                        .HasColumnType("int");

                    b.Property<string>("ClientVersion")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Keypad")
                        .HasColumnType("int");

                    b.Property<string>("PosVersion")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Product")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TillActivity")
                        .HasColumnType("datetime2");

                    b.Property<int>("TillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("TillId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("TillSync");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amt")
                        .HasColumnType("real");

                    b.Property<float?>("CartonQty")
                        .HasColumnType("real");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CommodityCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("CommodityId")
                        .HasColumnType("int");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<float>("Debtor")
                        .HasColumnType("real");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<double?>("Discount1")
                        .HasColumnType("float");

                    b.Property<float>("ExGSTAmt")
                        .HasColumnType("real");

                    b.Property<float>("ExGSTCost")
                        .HasColumnType("real");

                    b.Property<string>("Flags")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("GLAccount")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("GLPostedInd")
                        .HasColumnType("bit");

                    b.Property<int?>("Group")
                        .HasColumnType("int");

                    b.Property<string>("GrpCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManualInd")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ManufaturerCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("Member")
                        .HasColumnType("bigint");

                    b.Property<float?>("NewOnHand")
                        .HasColumnType("real");

                    b.Property<string>("OutletCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<float?>("Parent")
                        .HasColumnType("real");

                    b.Property<float?>("Points")
                        .HasColumnType("real");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PromoBuyCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoBuyId")
                        .HasColumnType("int");

                    b.Property<float>("PromoSales")
                        .HasColumnType("real");

                    b.Property<float>("PromoSalesGST")
                        .HasColumnType("real");

                    b.Property<string>("PromoSellCode")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PromoSellId")
                        .HasColumnType("int");

                    b.Property<float?>("PurchaseRebate")
                        .HasColumnType("real");

                    b.Property<string>("PurchaseRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ReferenceType")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<float?>("ScanRebate")
                        .HasColumnType("real");

                    b.Property<string>("ScanRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<float?>("StockMovement")
                        .HasColumnType("real");

                    b.Property<int?>("SubRange")
                        .HasColumnType("int");

                    b.Property<int?>("SubRangeCode")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Tender")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("TermsRebate")
                        .HasColumnType("real");

                    b.Property<string>("TermsRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("TillCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("TillId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float?>("UnitQty")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Weekend")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CommodityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Group");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OutletId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromoBuyId");

                    b.HasIndex("PromoSellId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TillId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.TransactionReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Amt")
                        .HasColumnType("real");

                    b.Property<float?>("CartonQty")
                        .HasColumnType("real");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CommodityId")
                        .HasColumnType("int");

                    b.Property<float?>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<float?>("Debtor")
                        .HasColumnType("real");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<float?>("Discount")
                        .HasColumnType("real");

                    b.Property<float?>("ExGSTAmt")
                        .HasColumnType("real");

                    b.Property<float?>("ExGSTCost")
                        .HasColumnType("real");

                    b.Property<string>("Flags")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("GLAccount")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("GLPostedInd")
                        .HasColumnType("bit");

                    b.Property<int?>("Group")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManualInd")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<long?>("Member")
                        .HasColumnType("bigint");

                    b.Property<float?>("NewOnHand")
                        .HasColumnType("real");

                    b.Property<int>("OutletId")
                        .HasColumnType("int");

                    b.Property<float?>("Parent")
                        .HasColumnType("real");

                    b.Property<float?>("Points")
                        .HasColumnType("real");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PromoBuyId")
                        .HasColumnType("int");

                    b.Property<float?>("PromoSales")
                        .HasColumnType("real");

                    b.Property<float?>("PromoSalesGST")
                        .HasColumnType("real");

                    b.Property<int?>("PromoSellId")
                        .HasColumnType("int");

                    b.Property<float?>("PurchaseRebate")
                        .HasColumnType("real");

                    b.Property<string>("PurchaseRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<float?>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ReferenceType")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<float?>("ScanRebate")
                        .HasColumnType("real");

                    b.Property<string>("ScanRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<float?>("StockMovement")
                        .HasColumnType("real");

                    b.Property<int?>("SubRange")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Tender")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<float?>("TermsRebate")
                        .HasColumnType("real");

                    b.Property<string>("TermsRebateCode")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("TillId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float?>("UnitQty")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Weekend")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CommodityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OutletId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromoBuyId");

                    b.HasIndex("PromoSellId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TillId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionReport");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.UserLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionAt")
                        .HasColumnType("datetime");

                    b.Property<int>("ActionBy")
                        .HasColumnType("int");

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DataLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TableId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionBy");

                    b.ToTable("UserLog");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.UserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RoleId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDefault = true,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDefault = true,
                            IsDeleted = false,
                            RoleId = 2,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDefault = true,
                            IsDeleted = false,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDefault = true,
                            IsDeleted = false,
                            RoleId = 3,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddUnlockProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResetPassword")
                        .HasColumnType("bit");

                    b.Property<string>("KeypadPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PlainPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("PromoPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasMaxLength(8);

                    b.Property<string>("StoreIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TempPasswordCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemporaryPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Type")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ZoneIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("UserName", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_UserName_Delete_Unique")
                        .HasFilter("UserName IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddUnlockProduct = false,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "SuperAdmin@coyote.com",
                            FirstName = "SuperAdmin",
                            IsDeleted = false,
                            IsResetPassword = false,
                            LastName = "SuperAdmin",
                            Password = "8kx7T0Uf3VYimsY1g/7aaA==",
                            Status = true,
                            StoreIds = "7",
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "SuperAdmin",
                            ZoneIds = "657"
                        },
                        new
                        {
                            Id = 2,
                            AddUnlockProduct = false,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@cdnsol.com",
                            FirstName = "USER1",
                            IsDeleted = false,
                            IsResetPassword = false,
                            LastName = "W",
                            Password = "8kx7T0Uf3VYimsY1g/7aaA==",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 3,
                            AddUnlockProduct = false,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "coyote@mailinator.com",
                            FirstName = "COYOTE",
                            IsDeleted = false,
                            IsResetPassword = false,
                            LastName = "test",
                            Password = "8kx7T0Uf3VYimsY1g/7aaA==",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "COYOTE_Test"
                        },
                        new
                        {
                            Id = 4,
                            AddUnlockProduct = false,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@example.com",
                            FirstName = "swagger",
                            IsDeleted = false,
                            IsResetPassword = false,
                            LastName = "test",
                            Password = "QIWtwazDYZU8/oVq2Xufwg==",
                            Status = true,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Swagger"
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("HostFormatId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HostFormatId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Code", "IsDeleted")
                        .IsUnique()
                        .HasName("IX_WarehouseCode_Delete_Unique")
                        .HasFilter("Code IS NOT NULL AND IsDeleted = 0");

                    b.ToTable("Warehouse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "WAREHOUSE1",
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "WAREHOUSE1",
                            HostFormatId = 7,
                            IsDeleted = false,
                            Status = false,
                            SupplierId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.XeroAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Anex")
                        .HasColumnType("bigint");

                    b.Property<string>("AnexDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("BalanceSheet")
                        .HasColumnType("bigint");

                    b.Property<string>("BalanceSheetDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("CashEFTPOS")
                        .HasColumnType("bigint");

                    b.Property<string>("CashEFTPOSDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FinAccSummary")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("FleetCard")
                        .HasColumnType("bigint");

                    b.Property<string>("FleetCardDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("FuelCard")
                        .HasColumnType("bigint");

                    b.Property<string>("FuelCardDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("GSTProdSale")
                        .HasColumnType("bigint");

                    b.Property<string>("GSTProdSaleDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LessUberEats")
                        .HasColumnType("bigint");

                    b.Property<string>("LessUberEatsDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("MotorCharge")
                        .HasColumnType("bigint");

                    b.Property<string>("MotorChargeDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("MotorPass")
                        .HasColumnType("bigint");

                    b.Property<string>("MotorPassDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("NonGSTProdSale")
                        .HasColumnType("bigint");

                    b.Property<string>("NonGSTProdSaleDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("Other")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("ProfitLoss")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfitLossDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("StockAccSummary")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<long?>("UnderOver")
                        .HasColumnType("bigint");

                    b.Property<string>("UnderOverDesc")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int?>("UserCreatedById")
                        .HasColumnType("int");

                    b.Property<string>("XeroConsumerKey")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("XeroSecretKey")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserCreatedById");

                    b.ToTable("XeroAccount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            Desc = "First prod1",
                            IsDeleted = false,
                            StoreId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ZoneOutlet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("StoreId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("ZoneId");

                    b.ToTable("ZoneOutlet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = 1,
                            IsDeleted = false,
                            StoreId = 1,
                            UpdatedAt = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedById = 1,
                            ZoneId = 7
                        });
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ZonePricing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<float?>("CtnCost")
                        .HasColumnType("real");

                    b.Property<DateTime?>("CtnCostDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CtnCostDateSV1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CtnCostDateSV2")
                        .HasColumnType("datetime2");

                    b.Property<float?>("CtnCostSV1")
                        .HasColumnType("real");

                    b.Property<float?>("CtnCostSV2")
                        .HasColumnType("real");

                    b.Property<float?>("CtnCostStd")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("MinReorderQty")
                        .HasColumnType("real");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime?>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PriceDateSV1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PriceDateSV2")
                        .HasColumnType("datetime2");

                    b.Property<float?>("PriceSV1")
                        .HasColumnType("real");

                    b.Property<float?>("PriceSV2")
                        .HasColumnType("real");

                    b.Property<int>("PriceZoneId")
                        .HasColumnType("int");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PriceZoneId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ZonePricing");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.APN", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("APNCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_APN_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("APNProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("APNUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_APN_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AccessDepartment", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("AccessDepartmentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_AccessDepartment_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Departments")
                        .WithMany("AccessDepartmentDept")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("AccessDepartmentUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_AccessDepartment_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AccountLoyalty", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "AccountLoyaltyCreatedBy")
                        .WithMany("AccountLoyaltyCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_AccountLoyalty_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "AccountLoyaltyUpdatedBy")
                        .WithMany("AccountLoyaltyUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_AccountLoyalty_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AccountTransaction", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Category")
                        .WithMany("AccountTransactionCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_MasterListItem_AccountTransaction_Category_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Commodity", "Commodity")
                        .WithMany("AccountTransactionCommodity")
                        .HasForeignKey("CommodityId")
                        .HasConstraintName("FK_Commodity_AccountTransaction_Commodity_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "AccountTransactionCreatedBy")
                        .WithMany("AccountTransactionCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_AccountTransaction_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Department")
                        .WithMany("AccountTransactionDepartments")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Department_AccountTransaction_Department_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Manufacturer")
                        .WithMany("AccountTransactionManufacturers")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_MasterListItem_AccountTransaction_Manufacturer_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("AccountTransactionStores")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Store_AccountTransaction_Outlet_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("AccountTransactionProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_AccountTransaction_Product_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionBuy")
                        .WithMany("AccountTransactionPromoBuys")
                        .HasForeignKey("PromoBuyId")
                        .HasConstraintName("FK_Promotion_AccountTransaction_Promotion_Buy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionSell")
                        .WithMany("AccountTransactionPromoSells")
                        .HasForeignKey("PromoSellId")
                        .HasConstraintName("FK_Promotion_AccountTransaction_Promotion_Sell")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("AccountTransactionSuppliers")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_AccountTransaction_Supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Till", "Till")
                        .WithMany("AccountTransactionTills")
                        .HasForeignKey("TillId")
                        .HasConstraintName("FK_Till_AccountTransaction_Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "AccountTransactionUpdatedBy")
                        .WithMany("AccountTransactionUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_AccountTransaction_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "User")
                        .WithMany("AccountTransactionUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_AccountTransaction_User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.AutoOrderSettings", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("AutoOrderSettingsCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_AutoOrderSettings_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("AutoOrderSettings")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Store_AutoOrderSettings")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("AutoOrderSettings")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_AutoOrderSettings")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("AutoOrderSettingsUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_AutoOrderSettings_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.BulkOrderFromTablet", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("BulkOrderFromTabletCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_BulkOrderFromTablet_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("BulkOrderFromTabletOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_BulkOrderFromTablet_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("BulkOrderFromTabletUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_BulkOrderFromTablet_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CSCPeriod", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CSCPeriodCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_CSCPeriod_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("CSCPeriodUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_CSCPeriod_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Cashier", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "AccessLevel")
                        .WithMany("CashierAccessLevelMasterListItem")
                        .HasForeignKey("AccessLevelId")
                        .HasConstraintName("FK_MasterListItem_CashierAccesLevel")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CashierCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Cashier_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentsId");

                    b.HasOne("Coyote.Console.App.Models.Store", "Outlet")
                        .WithMany("CashierStores")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Store_CashierStore")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.StoreGroup", "StoreGroup")
                        .WithMany("CashierStoreGroup")
                        .HasForeignKey("StoreGroupId")
                        .HasConstraintName("FK_StoreGroup_CashierStoreGroup")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Type")
                        .WithMany("CashierTypeMasterListItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_MasterListItem_CashierType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("CashierUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Cashier_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Zone")
                        .WithMany("CashierZoneMasterListItem")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_MasterListItem_CashierZone")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Commodity", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Category")
                        .WithMany("CommodityTypeCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Commodity_MasterListItems_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CommodityCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Commodity_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Departments")
                        .WithMany("Commodity")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Commodity_Department_Dept_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("CommodityUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Commodity_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CompetitionDetail", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CompetitionDetailsCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_CompetitionDetailsCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithOne("CompetitionDetails")
                        .HasForeignKey("Coyote.Console.App.Models.CompetitionDetail", "PromotionId")
                        .HasConstraintName("FK_CompetitionDetails_Promotion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "CompetitionResetCycle")
                        .WithMany("CompetitionDetailsResetMasterListItem")
                        .HasForeignKey("ResetCycleId")
                        .HasConstraintName("FK_CompetitionDetailsReset_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "RewardType")
                        .WithMany("CompetitionRewardTypeMasterList")
                        .HasForeignKey("RewardTypeId")
                        .HasConstraintName("FK_CompetitionDetailsRewardType_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "TriggerType")
                        .WithMany("CompetitionDetailTriggerTypeMasterList")
                        .HasForeignKey("TriggerTypeId")
                        .HasConstraintName("FK_CompetitionDetailsTriggerType_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "CompetitionType")
                        .WithMany("CompetitionDetailsTypeMasterLisItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_CompetitionDetailsType_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("CompetitionDetailsUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_CompetitionDetailsUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "CompetitionZone")
                        .WithMany("CompetitionDetailsZoneMasterListItem")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_CompetitionDetailsZone_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CompetitionReward", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.PromotionCompetition", "PromoComp")
                        .WithOne("Rewards")
                        .HasForeignKey("Coyote.Console.App.Models.CompetitionReward", "CompPromoId")
                        .HasConstraintName("FK_PromotionCompetition_CompetitionReward")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CompetitionRewardCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_CompetitionRewardCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("CompetitionRewardUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_CompetitionRewardUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CompetitionTrigger", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.PromotionCompetition", "PromoComp")
                        .WithOne("Triggers")
                        .HasForeignKey("Coyote.Console.App.Models.CompetitionTrigger", "CompPromoId")
                        .HasConstraintName("FK_PromotionCompetition_CompetitionTrigger")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CompetitionTriggerCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_CompetitionTriggerCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "TriggerProductGroup")
                        .WithMany("CompetitionTriggerGroupMasterList")
                        .HasForeignKey("TriggerProductGroupID")
                        .HasConstraintName("FK_CompetitionTriggerGroup_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("CompetitionTriggerUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_CompetitionTriggerUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.CostPriceZones", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("CostPriceZonesCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_CostPriceZones_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.HostSettings", "HostSettings")
                        .WithMany("CostPriceZonesHostSettings")
                        .HasForeignKey("HostSettingID")
                        .HasConstraintName("FK_CostPriceZones_HostSettings")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("CostPriceZonesUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_CostPriceZones_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Department", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("DepartmentCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Department_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "MapTypeMasterListItems")
                        .WithMany("DeptMapType")
                        .HasForeignKey("MapTypeId")
                        .HasConstraintName("FK_MasterListItem_Department_Dept__Map_Type_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("DepartmentUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Department_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.EPay", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("EPAYCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_EPAY_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("EPAYUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_EPAY_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("EPAYProducts")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_EPAY_Product")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.EmailTemplate", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("EmailTemplateCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_EmailTemplate_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("EmailTemplateUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_EmailTemplate_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.GLAccount", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("GLAccountCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_GLAccount_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("GLAccountStores")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Store_GLAccountStore")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("GLAccountSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_GLAccountSupplier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "TypeMasterListItem")
                        .WithMany("AccountTypeMasterListItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_MasterListItem_AccountType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("GLAccountUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_GLAccount_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.HostProcessing", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("HostProcessingCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_HostProcessing_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("HostProcessingUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_HostProcessing_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.HostSettings", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("HostSettingsCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_HostSettings_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Paths", "Path")
                        .WithMany("HostSettingsFilePath")
                        .HasForeignKey("FilePathID")
                        .HasConstraintName("FK_HostSettings_FilePath")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "HostFormatWareHouse")
                        .WithMany("HostSettingsMasterListItem")
                        .HasForeignKey("HostFormatID")
                        .HasConstraintName("FK_HostSettings_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("HostSettingsUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_HostSettings_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("HostSettingsSupplier")
                        .HasForeignKey("SupplierID")
                        .HasConstraintName("FK_HostSettings_Supplier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Warehouse", "Warehouse")
                        .WithMany("HostSettingsWarehouse")
                        .HasForeignKey("WareHouseID")
                        .HasConstraintName("FK_HostSettings_Warehouse")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.HostUpdChange", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "ChangeType")
                        .WithMany("HostUpdChangeType")
                        .HasForeignKey("ChangeTypeId")
                        .HasConstraintName("FK_User_HostUpdChange_ChangeTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("HostUpdChangeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_HostUpdChange_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.HostSettings", "Host")
                        .WithMany("HostUpdChangeHostSettings")
                        .HasForeignKey("HostId")
                        .HasConstraintName("FK_User_HostUpdChange_HostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.HostProcessing", "HostUpd")
                        .WithMany("HostUpdHostProcessing")
                        .HasForeignKey("HostUpdId")
                        .HasConstraintName("FK_User_HostUpdChange_HostUpdId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Outlets")
                        .WithMany("HostUpdChangeOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_User_HostUpdChange_OutletId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("HostUpdChanges")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_User_HostUpdChange_ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithMany("HostUpdChangePromotion")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_User_HostUpdChange_PromotionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("HostUpdChangeUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_HostUpdChange_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.JournalDetail", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.APN", "APN")
                        .WithMany("APNJournalDetail")
                        .HasForeignKey("APNSold")
                        .HasConstraintName("FK_APN_Journal_Detail_APN")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Accounts", null)
                        .WithMany("JournalMemberAccount")
                        .HasForeignKey("AccountsACC_NUMBER");

                    b.HasOne("Coyote.Console.App.Models.Cashier", "Cashier")
                        .WithMany("JournalDetailsCahier")
                        .HasForeignKey("CashierId")
                        .HasConstraintName("FK_Cashier_Journal_Detail_Cashier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "JournalDetailCreatedBy")
                        .WithMany("JournalDetailsCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Journal_Detail_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.JournalHeader", "JournalHeader")
                        .WithMany("JournalDetails")
                        .HasForeignKey("JournalHeaderId")
                        .HasConstraintName("FK_Journal_Header_Journal_Detail_Journal_Header")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("JournalDetailsProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_Journal_Detail_Product")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionCompetition")
                        .WithMany("JournalDetailCompPromo")
                        .HasForeignKey("PromoCompId")
                        .HasConstraintName("FK_Promotion_Journal_Detail_Promotion_comp")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionMemberOffer")
                        .WithMany("JournalDetailMemberOfferPromo")
                        .HasForeignKey("PromoMemeberOfferId")
                        .HasConstraintName("FK_Promotion_Journal_Detail_Promotion_MemberOffer")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionMixMatch")
                        .WithMany("JournalDetailMixMatchPromo")
                        .HasForeignKey("PromoMixMatchId")
                        .HasConstraintName("FK_Promotion_Journal_Detail_Promotion_MixMatch")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionOffer")
                        .WithMany("JournalDetailOfferPromo")
                        .HasForeignKey("PromoOfferId")
                        .HasConstraintName("FK_Promotion_Journal_Detail_Promotion_Offer")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionSell")
                        .WithMany("JournalDetailSellPromo")
                        .HasForeignKey("PromoSellId")
                        .HasConstraintName("FK_Promotion_Journal_Detail_Promotion_Sell")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "JournalDetailUpdatedBy")
                        .WithMany("JournalDetailsUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Journal_Detail_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.JournalHeader", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Cashier", "Cashier")
                        .WithMany("JournalHeaderCashier")
                        .HasForeignKey("CashierId")
                        .HasConstraintName("FK_Cashier_Journal_Header_Cashier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("JournalHeaderCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Journal_Header_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("JournalHeaderOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_Journal_Header_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Till", "Till")
                        .WithMany("JournalHeaderTill")
                        .HasForeignKey("TillId")
                        .HasConstraintName("FK_Till_Journal_Header_Till")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("JournalHeaderUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Journal_Header_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Keypad", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("KeypadCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Keypad_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("KeypadOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Keypad_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("KeypadUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Keypad_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.KeypadButton", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.KeypadLevel", "BtnKeypadLevel")
                        .WithMany("ButtonKeypadLevel")
                        .HasForeignKey("BtnKeypadLevelId")
                        .HasConstraintName("FK_KeypadButton_ButtonTypeLevel")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Category")
                        .WithMany("ButtonTypeCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_KeypadButton_ButtonTypeCategory")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("KeypadButtonCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_KeypadButton_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Keypad", "Keypad")
                        .WithMany("KeypadButton")
                        .HasForeignKey("KeypadId")
                        .HasConstraintName("FK_Keypad_KeypadButton")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.KeypadLevel", "KeypadLevel")
                        .WithMany("KeypadButton")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK_KeypadButton_KeypadLevel")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("ButtonnTypeProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_KeypadButton_ButtonTypeProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "ButtonType")
                        .WithMany("KeypadButtonsMasterListItem")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK_KeypadButton_ButtonType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("KeypadButtonUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_KeypadButton_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.KeypadLevel", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("KeypadLevelCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_KeypadLevel_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Keypad", "Keypad")
                        .WithMany("KeypadLevel")
                        .HasForeignKey("KeypadId")
                        .HasConstraintName("FK_Keypad_KeypadLevel")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("KeypadLevelUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_KeypadLevel_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ManualSale", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("ManualSaleCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ManualSale_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "TypeMasterListItem")
                        .WithMany("ManualSaleMasterListItems")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Type_ManualSale_Type")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("ManualSaleUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_ManualSale_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ManualSaleItem", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("ManualSaleItemCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ManualSaleItem_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.ManualSale", "ManualSale")
                        .WithMany("ManualSaleItem")
                        .HasForeignKey("ManualSaleId")
                        .HasConstraintName("FK_ManualSale_ManualSaleItem_ManualSale")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("ManualSaleItemOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_ManualSaleItem_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("ManualSaleItemProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_ManualSaleItem_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "TypeMasterListItem")
                        .WithMany("ManualSaleItemMasterListItems")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Type_ManualSaleItem_Type")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("ManualSaleItemUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_ManualSaleItem_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.MasterList", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("MasterListCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_MasterList_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("MasterListUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_MasterList_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.MasterListItems", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("MasterListItemsCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_MasterList_Items_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterList", "MasterList")
                        .WithMany("Items")
                        .HasForeignKey("ListId")
                        .HasConstraintName("FK_MasterList_MasterListItems_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("MasterListItemsUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_MasterList_Items_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ModuleActions", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "ActionType")
                        .WithMany("ActionTypeMasterListItem")
                        .HasForeignKey("ActionTypeId")
                        .HasConstraintName("FK_User_ControllerActionsAction_Type")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("ControllerActionsCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ControllerActionsCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "ModuleName")
                        .WithMany("ModuleNameMasterListItem")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_User_ControllerActionsModule_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("ControllerActionsUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_ControllerActionsUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OrderAudit", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OrderAuditCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Order_Audit_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "NewStatus")
                        .WithMany("OrderAuditNewStatusMasterListItem")
                        .HasForeignKey("NewStatusId")
                        .HasConstraintName("FK_MasterListItem_Order_Audit_NewStatus")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OrderAuditOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_Order_Audit_Outlet")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Status")
                        .WithMany("OrderAuditStatusMasterListItem")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_MasterListItem_Order_Audit_Status")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("OrderAuditSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_Order_Audit_Supplier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Type")
                        .WithMany("OrderAuditTypeMasterListItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_MasterListItem_Order_Audit_Type")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OrderAuditUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Order_Audit_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OrderDetail", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("OrderDetailCheaperSupplier")
                        .HasForeignKey("CheaperSupplierId")
                        .HasConstraintName("FK_Supplier_OrderDetail")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OrderDetailCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Order_Detail_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.OrderHeader", "OrderHeader")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderHeaderId")
                        .HasConstraintName("FK_Order_Header_Order_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "OrderType")
                        .WithMany("OrderDetailTypeMasterListItem")
                        .HasForeignKey("OrderTypeId")
                        .HasConstraintName("FK_MasterListItem_OrderDetail_Type")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("OrderDetailProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_Order_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.SupplierProduct", "SupplierProduct")
                        .WithMany("OrderDetailSupplierItem")
                        .HasForeignKey("SupplierProductId")
                        .HasConstraintName("FK_SupplierProduct_Order_Detail")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OrderDetailUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Order_Detail_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OrderHeader", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OrderHeaderCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Order_Header_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "CreationType")
                        .WithMany("OrderCreationTypeMasterListItem")
                        .HasForeignKey("CreationTypeId")
                        .HasConstraintName("FK_MasterListItem_OrderCreationType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OrderHeaderOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_Order_Header_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Status")
                        .WithMany("OrderStatusMasterListItem")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_MasterListItem_OrderStatus")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "StoreAsSupplier")
                        .WithMany("OrderHeaderStoreAsSuppliers")
                        .HasForeignKey("StoreIdAsSupplier")
                        .HasConstraintName("FK_Supplier_Order_Header_StoreIdAsSupplier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("OrderHeaderSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_Order_Header_Supplier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Type")
                        .WithMany("OrderTypeMasterListItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_MasterListItem_OrderType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OrderHeaderUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Order_Header_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletBudget", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OutletBudgetCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_OutletBudget_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OutletBudgetTarget")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_OutletBudget_Store_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OutletBudgetUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_OutletBudget_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletProduct", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OutletProductCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_OutletProduct_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("OutletProductProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionBuy")
                        .WithMany("OutletProductPromotionBuy")
                        .HasForeignKey("PromoBuyId")
                        .HasConstraintName("FK_Promo_Buy_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.CompetitionDetail", "PromotionComp")
                        .WithMany("OutletProductPromotionCompetition")
                        .HasForeignKey("PromoCompId")
                        .HasConstraintName("FK_Promo_Comp_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionMember")
                        .WithMany("OutletProductPromotionMember")
                        .HasForeignKey("PromoMemeberOfferId")
                        .HasConstraintName("FK_Promo_MemberOffer_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionMixMatch1")
                        .WithMany("OutletProductPromotionMixMatch1")
                        .HasForeignKey("PromoMixMatch1Id")
                        .HasConstraintName("FK_Promo_MixMatch_1_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionMixMatch2")
                        .WithMany("OutletProductPromotionMixMatch2")
                        .HasForeignKey("PromoMixMatch2Id")
                        .HasConstraintName("FK_Promo_MixMatch_2_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionOffer1")
                        .WithMany("OutletProductPromotionOffer1")
                        .HasForeignKey("PromoOffer1Id")
                        .HasConstraintName("FK_Promo_Offer_1_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionOffer2")
                        .WithMany("OutletProductPromotionOffer2")
                        .HasForeignKey("PromoOffer2Id")
                        .HasConstraintName("FK_Promo_Offer_2_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionOffer3")
                        .WithMany("OutletProductPromotionOffer3")
                        .HasForeignKey("PromoOffer3Id")
                        .HasConstraintName("FK_Promo_Offer_3_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionOffer4")
                        .WithMany("OutletProductPromotionOffer4")
                        .HasForeignKey("PromoOffer4Id")
                        .HasConstraintName("FK_Promo_Offer_4_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionSell")
                        .WithMany("OutletProductPromotionSell")
                        .HasForeignKey("PromoSellId")
                        .HasConstraintName("FK_Promo_Sell_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OutletProducts")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Store_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("OutletProductSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_OutletProduct")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OutletProductUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_OutletProduct_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletRoyaltyScales", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OutletRoyaltyScalesCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_OutletRoyaltyScales_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OutletRoyaltyScalesOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_OutletRoyaltyScales_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OutletRoyaltyScalesUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_OutletRoyaltyScales_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletSupplierSetting", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("OutletSupplierSettingCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_OutletSupplierSetting_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "DivisionMasterListItem")
                        .WithMany("OutletSupplierSettingDivisionList")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_MasterListItemDivision_OutletSupplierSetting")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "StateMasterListItem")
                        .WithMany("OutletSupplierSettingStateList")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_MasterListItemState_OutletSupplierSetting")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OutletSupplierSettingStroes")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Store_OutletSupplierSetting")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("OutletSupplierSettings")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_OutletSupplierSetting")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("OutletSupplierSettingUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_OutletSupplierSetting_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.OutletTradingHours", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("OutletTradingHoursCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_OutTradingHours_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Outelt")
                        .WithMany("OutletTradingHours")
                        .HasForeignKey("OuteltId")
                        .HasConstraintName("FK_Store_OutTradingHours")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("OutletTradingHoursUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_OutTradingHours_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.POSMessages", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("POSMessageCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_POSMsg_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("POSMessageUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_POSMsg_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Zone")
                        .WithMany("POSMessagesZone")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_Zone_POSMsg_ZoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Paths", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PathsCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Paths_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("PathsUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Paths_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("PathsOutlet")
                        .HasForeignKey("OutletID")
                        .HasConstraintName("FK_Paths_Outlet")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PrintLabelType", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PrintLabelTypeCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PrintLabelType_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PrintLabelTypeUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PrintLabelType_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Product", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "CategoryMasterListItem")
                        .WithMany("ProductCategoryMasterListItem")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_ProductCategory_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Commodity", "Commodity")
                        .WithMany("ProductsCommodity")
                        .HasForeignKey("CommodityId")
                        .HasConstraintName("FK_Commodity_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("ProductCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Product_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Department")
                        .WithMany("ProductDept")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Department_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "GroupMasterListItem")
                        .WithMany("ProductGroupMasterListItem")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_ProductGroup_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "ManufacturerMasterListItem")
                        .WithMany("ProductManufacturerMasterListItem")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_ProductManufacturer_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "NationalRangeMasterListItem")
                        .WithMany("ProductNationalRangeMasterListItem")
                        .HasForeignKey("NationalRangeId")
                        .HasConstraintName("FK_ProductNationalRange_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", null)
                        .WithMany("ProductAccessOutlets")
                        .HasForeignKey("StoreId");

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("ProductsSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Tax", "Tax")
                        .WithMany("ProductsTax")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("FK_Tax_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "TypeMasterListItem")
                        .WithMany("ProductTypeMasterListItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_ProductType_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "UnitMeasureMasterListItem")
                        .WithMany("ProductUnitMeasureMasterListItem")
                        .HasForeignKey("UnitMeasureId")
                        .HasConstraintName("FK_ProductUnitMeasure_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("ProductUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Product_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Promotion", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "PromotionFrequency")
                        .WithMany("PromotionFrequencyMasterListItem")
                        .HasForeignKey("FrequencyId")
                        .HasConstraintName("FK_PromotionFrequency_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "PromotionType")
                        .WithMany("PromotionTypeMasterListItem")
                        .HasForeignKey("PromotionTypeId")
                        .HasConstraintName("FK_PromotionType_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "PromotionSource")
                        .WithMany("PromotionSourceMasterListItem")
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_PromotionSource_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "PromotionZone")
                        .WithMany("PromotionZoneMasterListItem")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_PromotionZone_MasterListItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionBuying", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionBuyingCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionBuyingCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("PromotionBuying")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PromotionBuying")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithMany("PromotionBuying")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Promotion_PromotionBuying")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("PromotionBuying")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_PromotionBuying")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionBuyingUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionBuyingUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionCompetition", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.CompetitionDetail", "CompetitionDetail")
                        .WithMany("PromotionCompetitions")
                        .HasForeignKey("CompetitionId")
                        .HasConstraintName("FK_CompetitionDetail_PromotionCompetition")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionCompetitionCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionCompetitionCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("PromotionCompetitionProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PromotionCompetition")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionCompetitionUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionCompetitionUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionMemberOffer", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionMemberOfferCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionMemberOfferCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("PromotionMemberOffer")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PromotionMemberOffer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithMany("PromotionMemberOffer")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Promotion_PromotionMemberOffer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionMemberOfferUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionMemberOfferUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionMixmatch", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionMixmatchCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionMixmatchCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithMany("PromotionMixmatch")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Promotion_PromotionMixmatch")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionMixmatchUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionMixmatchUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionMixmatchProduct", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionMixmatchProductCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionMixmatchProductCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("PromotionMixmatchProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PromotionMixmatchProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.PromotionMixmatch", "PromotionMixmatch")
                        .WithMany("PromotionMixmatchProduct")
                        .HasForeignKey("PromotionMixmatchId")
                        .HasConstraintName("FK_PromotionMixmatch_PromotionMixmatchProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionMixmatchProductUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionMixmatchProductUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionOffer", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionOfferCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionOfferCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithMany("PromotionOffer")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Promotion_PromotionOffer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionOfferUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionOfferUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionOfferProduct", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionOfferProductCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionOfferProductCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("PromotionOfferProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PromotionOfferProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.PromotionOffer", "PromotionOffer")
                        .WithMany("PromotionOfferProduct")
                        .HasForeignKey("PromotionOfferId")
                        .HasConstraintName("FK_PromotionOffer_PromotionOfferProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionOfferProductUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionOfferProductUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.PromotionSelling", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("PromotionSellingCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_PromotionSellingCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("PromotionSellingchProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PromotionSelling")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "Promotion")
                        .WithMany("PromotionSelling")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Promotion_PromotionSelling")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("PromotionSellingUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_PromotionSellingUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RebateDetails", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("RebateDetailsCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ReabateDetail_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("RebateProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Rebate_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.RebateHeader", "RebateHeader")
                        .WithMany("RebateDetails")
                        .HasForeignKey("RebateHeaderId")
                        .HasConstraintName("FK_Rebate_Detail_Header")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("RebateDetailsUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_RebateDetail_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RebateHeader", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("RebateHeaderCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ReabateHeader_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Manufacturer")
                        .WithMany("RebateManufacturer")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_Rebate_Manufacturer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("RebateHeaderUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_RebateHeader_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Zone")
                        .WithMany("RebateZone")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_Rebate_Zone")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RebateOutlets", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("RebateOutletCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ReabateOutlet_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.RebateHeader", "RebateHeader")
                        .WithMany("RebateOutlets")
                        .HasForeignKey("RebateHeaderId")
                        .HasConstraintName("FK_Rebate_Outlet_Header")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("RebateOutlets")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Rebate_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("RebateOutletUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_RebateOutlet_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Recipe", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("RecipeCreated")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Recipe_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "IngredientProduct")
                        .WithMany("RecipeIngredientProduct")
                        .HasForeignKey("IngredientProductID")
                        .HasConstraintName("FK_RecipeIngredient_Product")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("RecipeUpdated")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Recipe_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("RecipeOutlet")
                        .HasForeignKey("OutletID")
                        .HasConstraintName("FK_Recipe_Outlet")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("RecipeProduct")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_Recipe_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ReportScheduler", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("ReportSchedulerCreatedBy")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_ReportScheduler_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("ReportSchedulerUpdatedBy")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_ReportScheduler_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Report")
                        .WithMany("ReportSchedulerTypes")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("FK_MasterListItem_Report")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ReportSchedulerLog", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.ReportScheduler", "Scheduler")
                        .WithMany("ReportSchedulerLog")
                        .HasForeignKey("SchedulerId")
                        .HasConstraintName("FK_SchedulerLog_Scheduler")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserScheduled")
                        .WithMany("SchedulerUserLog")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SchedulerUserLog_User")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Roles", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("RolesCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_role_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("RolesUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_role_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.RolesDefaultPermissions", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("RolesDefaultPermissionsCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Role_Default_Permission_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("RolesDefaultPermissionsUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Role_Default_Permission_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SchedulerUser", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("SchedulerUserCreatedBy")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_SchedulerUser_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("SchedulerUserUpdatedBy")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_SchedulerUser_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.ReportScheduler", "Scheduler")
                        .WithMany("SchedulerUser")
                        .HasForeignKey("SchedulerId")
                        .HasConstraintName("FK_SchedulerUser_Scheduler")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserScheduled")
                        .WithMany("SchedulerUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SchedulerUser_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SendEmail", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("SendEmailCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_SendEmail_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("SendEmailUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_SendEmail_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockAdjustDetail", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("StockAdjustDetailCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Stock_Adjust_Detail_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.OutletProduct", "OutletProduct")
                        .WithMany("StockAdjustDetailOutletProduct")
                        .HasForeignKey("OutletProductId")
                        .HasConstraintName("FK_Outlet_Product_Stock_Adjust_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("StockAdjustDetailProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_Stock_Adjust_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Reason")
                        .WithMany("StockAdjustDetailListItem")
                        .HasForeignKey("ReasonId")
                        .HasConstraintName("FK_MasterListItem_StockAdjustDetail_Type")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.StockAdjustHeader", "StockAdjustHeader")
                        .WithMany("StockAdjustDetails")
                        .HasForeignKey("StockAdjustHeaderId")
                        .HasConstraintName("FK_Stock_Adjust_Header_Stock_Adjust_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("StockAdjustDetailUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Stock_Adjust_Detail_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockAdjustHeader", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("StockAdjustHeaderCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Stock_Adjust_Header_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("StockAdjustHeaderOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_Stock_Adjust_Header_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("StockAdjustHeaderUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Stock_Adjust_Header_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockTakeDetail", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("StockTakeDetailCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Stock_Take_Detail_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.OutletProduct", "OutletProduct")
                        .WithMany("StockTakeDetailOutletProduct")
                        .HasForeignKey("OutletProductId")
                        .HasConstraintName("FK_Outlet_Product_Stock_Take_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", null)
                        .WithMany("StockTakeDetailProduct")
                        .HasForeignKey("ProductId");

                    b.HasOne("Coyote.Console.App.Models.StockTakeHeader", "StockTakeHeader")
                        .WithMany("StockTakeDetails")
                        .HasForeignKey("StockTakeHeaderId")
                        .HasConstraintName("FK_Stock_Take_Header_Stock_Take_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("StockTakeDetailUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Stock_Take_Detail_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StockTakeHeader", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("StockTakeHeaderCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Stock_Take_Header_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("StockTakeHeaderOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Outlet_Stock_Take_Header_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("StockTakeHeaderUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Stock_Take_Header_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Store", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.CostPriceZones", "CostZone")
                        .WithMany("StoreCostZones")
                        .HasForeignKey("CostZoneId")
                        .HasConstraintName("FK_CostZones_Cost_Store_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("StoresCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Store_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.StoreGroup", "StoreGroups")
                        .WithMany("Stores")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Store_store_group_Store_Group_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.PrintLabelType", "LabelTypePromo")
                        .WithMany("StoreDefaultPromo")
                        .HasForeignKey("LabelTypePromoId")
                        .HasConstraintName("FK_Store_LabelTypePromo_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.PrintLabelType", "LabelTypeShelf")
                        .WithMany("StoreDefaultShelf")
                        .HasForeignKey("LabelTypeShelfId")
                        .HasConstraintName("FK_Store_LabelTypeShelf_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.PrintLabelType", "LabelTypeShort")
                        .WithMany("StoreDefaultShort")
                        .HasForeignKey("LabelTypeShortId")
                        .HasConstraintName("FK_Store_LabelTypeShort_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "OutletPriceFromOutlet")
                        .WithMany("OutletPriceFromOutletStore")
                        .HasForeignKey("OutletPriceFromOutletId")
                        .HasConstraintName("FK_Store_OutletPriceFromOutlet")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.CostPriceZones", "PriceZone")
                        .WithMany("StorePriceZones")
                        .HasForeignKey("PriceZoneId")
                        .HasConstraintName("FK_Store_Price_PriceZones_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("StoresUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Store_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Warehouse", "Warehouse")
                        .WithMany("StoreWarehouse")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK_Store_Warehouse_Id")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.StoreGroup", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("StoreGroupCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Store_Group_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("StoreGroupUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Store_Group_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Supplier", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("SupplierCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Supplier_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("SupplierUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Supplier_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SupplierOrderingSchedule", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("SupplierOrderingUpdatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_SupplierOrdering_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("SupplierOrderingScheduleStore")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_SupplierOrder_Store")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("SupplierOrderingScheduleSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_SupplierOrder_Supplier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("SupplierOrderingCreatedBy")
                        .HasForeignKey("UserCreatedById");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SupplierProduct", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("SupplierProductCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_SupplierProduct_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("SupplierProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_ProductSupplier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("SupplierProductSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_ProductSupplier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("SupplierProductUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_SupplierProduct_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.SystemControls", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("SystemControlCreatedBy")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_User_SysControl_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserModifiedBy")
                        .WithMany("SystemControlUpdatedBy")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_User_SysControl_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Tax", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("TaxCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Tax_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("TaxUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Tax_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Till", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("TillCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Till_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Keypad", "Keypad")
                        .WithMany("TillKeypad")
                        .HasForeignKey("KeypadId")
                        .HasConstraintName("FK_Till_Keypad")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("TillOutlet")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Till_Outlet")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Type")
                        .WithMany("TillTypeMasterListItem")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_MasterListItem_TillType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("TillUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Till_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.TillSync", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("TillSyncCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_TillSyncCreated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("OutletTillSync")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Store_TillsSync")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Till", "Till")
                        .WithMany("SyncTills")
                        .HasForeignKey("TillId")
                        .HasConstraintName("FK_Till_TillsSync")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("TillSyncUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_TillSyncUpdated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Transaction", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Category")
                        .WithMany("TransactionCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_MasterListItem_Transaction_Category_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Commodity", "Commodity")
                        .WithMany("TransactionCommodity")
                        .HasForeignKey("CommodityId")
                        .HasConstraintName("FK_Commodity_Transaction_Commodity_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "TransactionCreatedBy")
                        .WithMany("TransactionCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Transaction_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Department")
                        .WithMany("TransactionDepartments")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Department_Transaction_Department_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "GroupCode")
                        .WithMany("TransactionGroup")
                        .HasForeignKey("Group")
                        .HasConstraintName("FK_MasterListItem_Transaction_Group_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Manufacturer")
                        .WithMany("TransactionManufacturers")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_MasterListItem_Transaction_Manufacturer_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("TransactionStores")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Store_Transaction_Store_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("TransactionProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_Transaction_Product_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionBuy")
                        .WithMany("TransactionPromoBuys")
                        .HasForeignKey("PromoBuyId")
                        .HasConstraintName("FK_Promotion_Transaction_Promotion_Buy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionSell")
                        .WithMany("TransactionPromoSells")
                        .HasForeignKey("PromoSellId")
                        .HasConstraintName("FK_Promotion_Transaction_Promotion_Sell")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("TransactionSuppliers")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_Transaction_Supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Till", "Till")
                        .WithMany("TransactionTills")
                        .HasForeignKey("TillId")
                        .HasConstraintName("FK_Till_Transaction_Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "TransactionUpdatedBy")
                        .WithMany("TransactionUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Transaction_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "User")
                        .WithMany("TransactionUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_Transaction_User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.TransactionReport", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Category")
                        .WithMany("TransactionReportCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_MasterListItem_TransactionReport_Category_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Commodity", "Commodity")
                        .WithMany("TransactionReportCommodity")
                        .HasForeignKey("CommodityId")
                        .HasConstraintName("FK_Commodity_TransactionReport_Commodity_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "TransactionReportCreatedBy")
                        .WithMany("TransactionReportCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_TransactionReport_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Department", "Department")
                        .WithMany("TransactionReportDepartments")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Department_TransactionReport_Department_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "Manufacturer")
                        .WithMany("TransactionReportManufacturers")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_MasterListItem_TransactionReport_Manufacturer_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("TransactionReportStores")
                        .HasForeignKey("OutletId")
                        .HasConstraintName("FK_Store_TransactionReport_Outlet_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("TransactionReportProduct")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_TransactionReport_Product_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionBuy")
                        .WithMany("TransactionReportPromoBuys")
                        .HasForeignKey("PromoBuyId")
                        .HasConstraintName("FK_Promotion_TransactionReport_Promotion_Buy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Promotion", "PromotionSell")
                        .WithMany("TransactionReportPromoSells")
                        .HasForeignKey("PromoSellId")
                        .HasConstraintName("FK_Promotion_TransactionReport_Promotion_Sell")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("TransactionReportSuppliers")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_TransactionReport_Supplier_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Till", "Till")
                        .WithMany("TransactionReportTills")
                        .HasForeignKey("TillId")
                        .HasConstraintName("FK_Till_TransactionReport_Till_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "TransactionReportUpdatedBy")
                        .WithMany("TransactionReportUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_TransactionReport_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "User")
                        .WithMany("TransactionReportUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_TransactionReport_User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.UserLog", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "ActionById")
                        .WithMany("LogCreatedBy")
                        .HasForeignKey("ActionBy")
                        .HasConstraintName("FK_User_UserLog_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.UserRoles", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("UserRolesCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_User_Roles_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Roles", "Roles")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Roles_Roles_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", null)
                        .WithMany("UserRolesStoreList")
                        .HasForeignKey("StoreId");

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("UserRolesUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_User_Roles_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserRoleList")
                        .WithMany("RolesList")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_User_Roles_User_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Users", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("Created")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_User_Created_By")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("Updated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_User_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("Coyote.Console.App.Models.Warehouse", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("WarehouseCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_Warehouse_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "HostFormatMasterListItem")
                        .WithMany("WarehousMasterListItem")
                        .HasForeignKey("HostFormatId")
                        .HasConstraintName("FK_Warehouse_MasterList_Items")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Supplier", "Supplier")
                        .WithMany("WarehousesSupplier")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Supplier_Warehouse")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("WarehouseUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_Warehouse_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.XeroAccount", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "UserUpdatedBy")
                        .WithMany("XeroAccountUpdated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_XeroAccounting_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("XeroAccountingStores")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_XeroAccounting_Store")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UserCreatedBy")
                        .WithMany("XeroAccountCreated")
                        .HasForeignKey("UserCreatedById");
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ZoneOutlet", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("ZoneOutLetCreated")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_ZoneOut_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Store", "Store")
                        .WithMany("ZoneOutlets")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_Store_ZoneOut_Store_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("ZoneOutLetUpdated")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_User_ZoneOut_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.MasterListItems", "ZoneMasterListItems")
                        .WithMany("ZoneOutlet")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_MasterListItems_ZoneOut_Zone_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Coyote.Console.App.Models.ZonePricing", b =>
                {
                    b.HasOne("Coyote.Console.App.Models.Users", "CreatedBy")
                        .WithMany("ZonePricingCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ZonePricing_Created_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.CostPriceZones", "PriceZoneCostPrice")
                        .WithMany("ZonePricingCostZone")
                        .HasForeignKey("PriceZoneId")
                        .HasConstraintName("FK_CostZone_PriceZone")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Product", "Product")
                        .WithMany("ProductZonePricing")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PriceZone")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Coyote.Console.App.Models.Users", "UpdatedBy")
                        .WithMany("ZonePricingUpdatedBy")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_ZonePricing_Updated_By")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
